{"version":3,"sources":["src/components-examples/components-examples-material-progress-spinner.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","progressSpinner","common","core","forms","card","radio","slider","this","i4","i0","i3","i1","i5","i2","i6","ProgressSpinnerConfigurableExample_section_22_Template","rf","ctx","_r2_1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProgressSpinnerConfigurableExample_section_22_Template_mat_slider_ngModelChange_3_listener","$event","ɵɵrestoreView","ɵɵnextContext","value","ctx_r0","ɵɵadvance","ɵɵproperty","ProgressSpinnerConfigurableExample","ProgressSpinnerOverviewExample","ProgressSpinnerExamplesModule","color","mode","ɵfac","ProgressSpinnerConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ProgressSpinnerConfigurableExample_Template","ProgressSpinnerConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener","ProgressSpinnerConfigurableExample_Template_mat_radio_group_ngModelChange_17_listener","ɵɵtemplate","ɵɵelement","directives","MatCard","MatCardContent","MatRadioGroup","NgControlStatus","NgModel","MatRadioButton","NgIf","MatProgressSpinner","MatSlider","styles","ProgressSpinnerOverviewExample_Factory","ProgressSpinnerOverviewExample_Template","MatSpinner","encapsulation","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ProgressSpinnerExamplesModule_Factory","imports","CommonModule","MatCardModule","MatProgressSpinnerModule","MatRadioModule","MatSliderModule","FormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/card'), require('@angular/material/progress-spinner'), require('@angular/material/radio'), require('@angular/material/slider')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/progress-spinner', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/card', '@angular/material/progress-spinner', '@angular/material/radio', '@angular/material/slider'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.progressSpinner = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.card, global.ng.material.progressSpinner, global.ng.material.radio, global.ng.material.slider));\n}(this, (function (exports, i4, i0, i3, i1, i5, i2, i6) { 'use strict';\n\n    function ProgressSpinnerConfigurableExample_section_22_Template(rf, ctx) {\n        if (rf & 1) {\n            var _r2_1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"section\", 1);\n            i0.ɵɵelementStart(1, \"label\", 2);\n            i0.ɵɵtext(2, \"Progress:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"mat-slider\", 11);\n            i0.ɵɵlistener(\"ngModelChange\", function ProgressSpinnerConfigurableExample_section_22_Template_mat_slider_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r2_1); var ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.value = $event; });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var ctx_r0 = i0.ɵɵnextContext();\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx_r0.value);\n        }\n    }\n    /**\n     * @title Configurable progress spinner\n     */\n    var ProgressSpinnerConfigurableExample = /** @class */ (function () {\n        function ProgressSpinnerConfigurableExample() {\n            this.color = 'primary';\n            this.mode = 'determinate';\n            this.value = 50;\n        }\n        return ProgressSpinnerConfigurableExample;\n    }());\n    ProgressSpinnerConfigurableExample.ɵfac = function ProgressSpinnerConfigurableExample_Factory(t) { return new (t || ProgressSpinnerConfigurableExample)(); };\n    ProgressSpinnerConfigurableExample.ɵcmp = i0.ɵɵdefineComponent({ type: ProgressSpinnerConfigurableExample, selectors: [[\"progress-spinner-configurable-example\"]], decls: 28, vars: 6, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"primary\", 1, \"example-margin\"], [\"value\", \"accent\", 1, \"example-margin\"], [\"value\", \"warn\", 1, \"example-margin\"], [\"value\", \"determinate\", 1, \"example-margin\"], [\"value\", \"indeterminate\", 1, \"example-margin\"], [\"class\", \"example-section\", 4, \"ngIf\"], [1, \"example-margin\", 3, \"color\", \"mode\", \"value\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"]], template: function ProgressSpinnerConfigurableExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-card\");\n                i0.ɵɵelementStart(1, \"mat-card-content\");\n                i0.ɵɵelementStart(2, \"h2\", 0);\n                i0.ɵɵtext(3, \"Progress spinner configuration\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"section\", 1);\n                i0.ɵɵelementStart(5, \"label\", 2);\n                i0.ɵɵtext(6, \"Color:\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(7, \"mat-radio-group\", 3);\n                i0.ɵɵlistener(\"ngModelChange\", function ProgressSpinnerConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener($event) { return ctx.color = $event; });\n                i0.ɵɵelementStart(8, \"mat-radio-button\", 4);\n                i0.ɵɵtext(9, \" Primary \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(10, \"mat-radio-button\", 5);\n                i0.ɵɵtext(11, \" Accent \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"mat-radio-button\", 6);\n                i0.ɵɵtext(13, \" Warn \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(14, \"section\", 1);\n                i0.ɵɵelementStart(15, \"label\", 2);\n                i0.ɵɵtext(16, \"Mode:\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(17, \"mat-radio-group\", 3);\n                i0.ɵɵlistener(\"ngModelChange\", function ProgressSpinnerConfigurableExample_Template_mat_radio_group_ngModelChange_17_listener($event) { return ctx.mode = $event; });\n                i0.ɵɵelementStart(18, \"mat-radio-button\", 7);\n                i0.ɵɵtext(19, \" Determinate \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(20, \"mat-radio-button\", 8);\n                i0.ɵɵtext(21, \" Indeterminate \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵtemplate(22, ProgressSpinnerConfigurableExample_section_22_Template, 4, 1, \"section\", 9);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(23, \"mat-card\");\n                i0.ɵɵelementStart(24, \"mat-card-content\");\n                i0.ɵɵelementStart(25, \"h2\", 0);\n                i0.ɵɵtext(26, \"Result\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelement(27, \"mat-progress-spinner\", 10);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"ngModel\", ctx.color);\n                i0.ɵɵadvance(10);\n                i0.ɵɵproperty(\"ngModel\", ctx.mode);\n                i0.ɵɵadvance(5);\n                i0.ɵɵproperty(\"ngIf\", ctx.mode === \"determinate\");\n                i0.ɵɵadvance(5);\n                i0.ɵɵproperty(\"color\", ctx.color)(\"mode\", ctx.mode)(\"value\", ctx.value);\n            }\n        }, directives: [i1.MatCard, i1.MatCardContent, i2.MatRadioGroup, i3.NgControlStatus, i3.NgModel, i2.MatRadioButton, i4.NgIf, i5.MatProgressSpinner, i6.MatSlider], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 0 10px;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ProgressSpinnerConfigurableExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'progress-spinner-configurable-example',\n                        templateUrl: 'progress-spinner-configurable-example.html',\n                        styleUrls: ['progress-spinner-configurable-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Basic progress-spinner\n     */\n    var ProgressSpinnerOverviewExample = /** @class */ (function () {\n        function ProgressSpinnerOverviewExample() {\n        }\n        return ProgressSpinnerOverviewExample;\n    }());\n    ProgressSpinnerOverviewExample.ɵfac = function ProgressSpinnerOverviewExample_Factory(t) { return new (t || ProgressSpinnerOverviewExample)(); };\n    ProgressSpinnerOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: ProgressSpinnerOverviewExample, selectors: [[\"progress-spinner-overview-example\"]], decls: 1, vars: 0, template: function ProgressSpinnerOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelement(0, \"mat-spinner\");\n            }\n        }, directives: [i5.MatSpinner], encapsulation: 2 });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ProgressSpinnerOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'progress-spinner-overview-example',\n                        templateUrl: 'progress-spinner-overview-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        ProgressSpinnerConfigurableExample,\n        ProgressSpinnerOverviewExample,\n    ];\n    var ProgressSpinnerExamplesModule = /** @class */ (function () {\n        function ProgressSpinnerExamplesModule() {\n        }\n        return ProgressSpinnerExamplesModule;\n    }());\n    ProgressSpinnerExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: ProgressSpinnerExamplesModule });\n    ProgressSpinnerExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function ProgressSpinnerExamplesModule_Factory(t) { return new (t || ProgressSpinnerExamplesModule)(); }, imports: [[\n                i4.CommonModule,\n                i1.MatCardModule,\n                i5.MatProgressSpinnerModule,\n                i2.MatRadioModule,\n                i6.MatSliderModule,\n                i3.FormsModule,\n            ]] });\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ProgressSpinnerExamplesModule, { declarations: [ProgressSpinnerConfigurableExample,\n                ProgressSpinnerOverviewExample], imports: [i4.CommonModule,\n                i1.MatCardModule,\n                i5.MatProgressSpinnerModule,\n                i2.MatRadioModule,\n                i6.MatSliderModule,\n                i3.FormsModule], exports: [ProgressSpinnerConfigurableExample,\n                ProgressSpinnerOverviewExample] });\n    })();\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ProgressSpinnerExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i4.CommonModule,\n                            i1.MatCardModule,\n                            i5.MatProgressSpinnerModule,\n                            i2.MatRadioModule,\n                            i6.MatSliderModule,\n                            i3.FormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ProgressSpinnerConfigurableExample = ProgressSpinnerConfigurableExample;\n    exports.ProgressSpinnerExamplesModule = ProgressSpinnerExamplesModule;\n    exports.ProgressSpinnerOverviewExample = ProgressSpinnerOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-progress-spinner.umd.js.map\n"]}