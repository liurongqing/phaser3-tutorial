{"version":3,"sources":["src/components-examples/components-examples-material-slide-toggle.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","slideToggle","core","forms","button","card","checkbox","radio","this","i0","i1","i3","i1$1","i4","i2","i2$1","SlideToggleConfigurableExample","color","checked","disabled","ɵfac","SlideToggleConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","SlideToggleConfigurableExample_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener","$event","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener","ɵɵadvance","ɵɵproperty","directives","MatCard","MatCardContent","MatRadioGroup","NgControlStatus","NgModel","MatRadioButton","MatCheckbox","MatSlideToggle","styles","SlideToggleOverviewExample","SlideToggleExamplesModule","SlideToggleFormsExample","formBuilder","isChecked","formGroup","group","enableWifi","acceptTerms","Validators","requiredTrue","prototype","onFormSubmit","alert","JSON","stringify","value","SlideToggleFormsExample_Factory","ɵɵdirectiveInject","FormBuilder","SlideToggleFormsExample_Template","SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener","SlideToggleFormsExample_Template_form_ngSubmit_6_listener","SlideToggleFormsExample_Template_form_ngSubmit_16_listener","ɵɵtextInterpolate1","status","NgControlStatusGroup","NgForm","MatSlideToggleRequiredValidator","RequiredValidator","MatButton","FormGroupDirective","FormControlName","SlideToggleOverviewExample_Factory","SlideToggleOverviewExample_Template","encapsulation","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","SlideToggleExamplesModule_Factory","imports","FormsModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/radio'), require('@angular/material/slide-toggle')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/slide-toggle', ['exports', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/card', '@angular/material/checkbox', '@angular/material/radio', '@angular/material/slide-toggle'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.slideToggle = {}), global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.card, global.ng.material.checkbox, global.ng.material.radio, global.ng.material.slideToggle));\n}(this, (function (exports, i0, i1, i3, i1$1, i4, i2, i2$1) { 'use strict';\n\n    /**\n     * @title Configurable slide-toggle\n     */\n    var SlideToggleConfigurableExample = /** @class */ (function () {\n        function SlideToggleConfigurableExample() {\n            this.color = 'accent';\n            this.checked = false;\n            this.disabled = false;\n        }\n        return SlideToggleConfigurableExample;\n    }());\n    SlideToggleConfigurableExample.ɵfac = function SlideToggleConfigurableExample_Factory(t) { return new (t || SlideToggleConfigurableExample)(); };\n    SlideToggleConfigurableExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleConfigurableExample, selectors: [[\"slide-toggle-configurable-example\"]], decls: 27, vars: 6, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"primary\", 1, \"example-margin\"], [\"value\", \"accent\", 1, \"example-margin\"], [\"value\", \"warn\", 1, \"example-margin\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"result\"], [1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\"]], template: function SlideToggleConfigurableExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-card\");\n                i0.ɵɵelementStart(1, \"mat-card-content\");\n                i0.ɵɵelementStart(2, \"h2\", 0);\n                i0.ɵɵtext(3, \"Slider configuration\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"section\", 1);\n                i0.ɵɵelementStart(5, \"label\", 2);\n                i0.ɵɵtext(6, \"Color:\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(7, \"mat-radio-group\", 3);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener($event) { return ctx.color = $event; });\n                i0.ɵɵelementStart(8, \"mat-radio-button\", 4);\n                i0.ɵɵtext(9, \" Primary \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(10, \"mat-radio-button\", 5);\n                i0.ɵɵtext(11, \" Accent \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"mat-radio-button\", 6);\n                i0.ɵɵtext(13, \" Warn \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(14, \"section\", 1);\n                i0.ɵɵelementStart(15, \"mat-checkbox\", 7);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener($event) { return ctx.checked = $event; });\n                i0.ɵɵtext(16, \"Checked\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(17, \"section\", 1);\n                i0.ɵɵelementStart(18, \"mat-checkbox\", 7);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.disabled = $event; });\n                i0.ɵɵtext(19, \"Disabled\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(20, \"mat-card\", 8);\n                i0.ɵɵelementStart(21, \"mat-card-content\");\n                i0.ɵɵelementStart(22, \"h2\", 0);\n                i0.ɵɵtext(23, \"Result\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(24, \"section\", 1);\n                i0.ɵɵelementStart(25, \"mat-slide-toggle\", 9);\n                i0.ɵɵtext(26, \" Slide me! \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"ngModel\", ctx.color);\n                i0.ɵɵadvance(8);\n                i0.ɵɵproperty(\"ngModel\", ctx.checked);\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"ngModel\", ctx.disabled);\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i1$1.MatCard, i1$1.MatCardContent, i2.MatRadioGroup, i1.NgControlStatus, i1.NgModel, i2.MatRadioButton, i4.MatCheckbox, i2$1.MatSlideToggle], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(SlideToggleConfigurableExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-configurable-example',\n                        templateUrl: 'slide-toggle-configurable-example.html',\n                        styleUrls: ['slide-toggle-configurable-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Slide-toggle with forms\n     */\n    var SlideToggleFormsExample = /** @class */ (function () {\n        function SlideToggleFormsExample(formBuilder) {\n            this.isChecked = true;\n            this.formGroup = formBuilder.group({\n                enableWifi: '',\n                acceptTerms: ['', i1.Validators.requiredTrue]\n            });\n        }\n        SlideToggleFormsExample.prototype.onFormSubmit = function () {\n            alert(JSON.stringify(this.formGroup.value, null, 2));\n        };\n        return SlideToggleFormsExample;\n    }());\n    SlideToggleFormsExample.ɵfac = function SlideToggleFormsExample_Factory(t) { return new (t || SlideToggleFormsExample)(i0.ɵɵdirectiveInject(i1.FormBuilder)); };\n    SlideToggleFormsExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleFormsExample, selectors: [[\"slide-toggle-forms-example\"]], decls: 25, vars: 4, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"ngModel\", \"\", \"name\", \"enableWifi\"], [\"ngModel\", \"\", \"name\", \"acceptTerms\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"enableWifi\"], [\"formControlName\", \"acceptTerms\"]], template: function SlideToggleFormsExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"p\");\n                i0.ɵɵtext(1, \"Slide Toggle using a simple NgModel.\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(2, \"mat-slide-toggle\", 0);\n                i0.ɵɵlistener(\"ngModelChange\", function SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener($event) { return ctx.isChecked = $event; });\n                i0.ɵɵtext(3);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"p\");\n                i0.ɵɵtext(5, \"Slide Toggle inside of a Template-driven form\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(6, \"form\", 1, 2);\n                i0.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_6_listener() { return ctx.onFormSubmit(); });\n                i0.ɵɵelementStart(8, \"mat-slide-toggle\", 3);\n                i0.ɵɵtext(9, \"Enable Wifi\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(10, \"mat-slide-toggle\", 4);\n                i0.ɵɵtext(11, \"Accept Terms of Service\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"button\", 5);\n                i0.ɵɵtext(13, \"Save Settings\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(14, \"p\");\n                i0.ɵɵtext(15, \"Slide Toggle inside of a Reactive form\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(16, \"form\", 6);\n                i0.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_16_listener() { return ctx.onFormSubmit(); });\n                i0.ɵɵelementStart(17, \"mat-slide-toggle\", 7);\n                i0.ɵɵtext(18, \"Enable Wifi\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(19, \"mat-slide-toggle\", 8);\n                i0.ɵɵtext(20, \"Accept Terms of Service\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(21, \"p\");\n                i0.ɵɵtext(22);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(23, \"button\", 5);\n                i0.ɵɵtext(24, \"Save Settings\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"ngModel\", ctx.isChecked);\n                i0.ɵɵadvance(1);\n                i0.ɵɵtextInterpolate1(\"Slide Toggle Checked: \", ctx.isChecked, \"\");\n                i0.ɵɵadvance(13);\n                i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n                i0.ɵɵadvance(6);\n                i0.ɵɵtextInterpolate1(\"Form Group Status: \", ctx.formGroup.status, \"\");\n            }\n        }, directives: [i2$1.MatSlideToggle, i1.NgControlStatus, i1.NgModel, i1.NgControlStatusGroup, i1.NgForm, i2$1.MatSlideToggleRequiredValidator, i1.RequiredValidator, i3.MatButton, i1.FormGroupDirective, i1.FormControlName], styles: [\".example-form[_ngcontent-%COMP%]   mat-slide-toggle[_ngcontent-%COMP%] {\\n  margin: 8px 0;\\n  display: block;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(SlideToggleFormsExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-forms-example',\n                        templateUrl: './slide-toggle-forms-example.html',\n                        styleUrls: ['./slide-toggle-forms-example.css'],\n                    }]\n            }], function () { return [{ type: i1.FormBuilder }]; }, null);\n    })();\n\n    /**\n     * @title Basic slide-toggles\n     */\n    var SlideToggleOverviewExample = /** @class */ (function () {\n        function SlideToggleOverviewExample() {\n        }\n        return SlideToggleOverviewExample;\n    }());\n    SlideToggleOverviewExample.ɵfac = function SlideToggleOverviewExample_Factory(t) { return new (t || SlideToggleOverviewExample)(); };\n    SlideToggleOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: SlideToggleOverviewExample, selectors: [[\"slide-toggle-overview-example\"]], decls: 2, vars: 0, template: function SlideToggleOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-slide-toggle\");\n                i0.ɵɵtext(1, \"Slide me!\");\n                i0.ɵɵelementEnd();\n            }\n        }, directives: [i2$1.MatSlideToggle], encapsulation: 2 });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(SlideToggleOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-overview-example',\n                        templateUrl: 'slide-toggle-overview-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        SlideToggleConfigurableExample,\n        SlideToggleFormsExample,\n        SlideToggleOverviewExample,\n    ];\n    var SlideToggleExamplesModule = /** @class */ (function () {\n        function SlideToggleExamplesModule() {\n        }\n        return SlideToggleExamplesModule;\n    }());\n    SlideToggleExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: SlideToggleExamplesModule });\n    SlideToggleExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function SlideToggleExamplesModule_Factory(t) { return new (t || SlideToggleExamplesModule)(); }, imports: [[\n                i1.FormsModule,\n                i3.MatButtonModule,\n                i1$1.MatCardModule,\n                i4.MatCheckboxModule,\n                i2.MatRadioModule,\n                i2$1.MatSlideToggleModule,\n                i1.ReactiveFormsModule,\n            ]] });\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SlideToggleExamplesModule, { declarations: [SlideToggleConfigurableExample,\n                SlideToggleFormsExample,\n                SlideToggleOverviewExample], imports: [i1.FormsModule,\n                i3.MatButtonModule,\n                i1$1.MatCardModule,\n                i4.MatCheckboxModule,\n                i2.MatRadioModule,\n                i2$1.MatSlideToggleModule,\n                i1.ReactiveFormsModule], exports: [SlideToggleConfigurableExample,\n                SlideToggleFormsExample,\n                SlideToggleOverviewExample] });\n    })();\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(SlideToggleExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i1.FormsModule,\n                            i3.MatButtonModule,\n                            i1$1.MatCardModule,\n                            i4.MatCheckboxModule,\n                            i2.MatRadioModule,\n                            i2$1.MatSlideToggleModule,\n                            i1.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.SlideToggleConfigurableExample = SlideToggleConfigurableExample;\n    exports.SlideToggleExamplesModule = SlideToggleExamplesModule;\n    exports.SlideToggleFormsExample = SlideToggleFormsExample;\n    exports.SlideToggleOverviewExample = SlideToggleOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-slide-toggle.umd.js.map\n"]}