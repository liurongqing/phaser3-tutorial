{"version":3,"sources":["src/components-examples/components-examples-material-checkbox.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","checkbox","common","core","forms","card","radio","this","i2","i0","i3","i1","i2$1","i4","CheckboxConfigurableExample","CheckboxOverviewExample_li_11_Template","rf","ctx","_r3_1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener","$event","ɵɵrestoreView","$implicit","completed","ɵɵnextContext","updateAllComplete","ɵɵtext","ɵɵelementEnd","subtask_r1","ɵɵadvance","ɵɵproperty","color","ɵɵtextInterpolate1","name","checked","indeterminate","labelPosition","disabled","ɵfac","CheckboxConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","CheckboxConfigurableExample_Template","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_5_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_7_listener","CheckboxConfigurableExample_Template_mat_radio_group_ngModelChange_12_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_25_listener","CheckboxConfigurableExample_Template_mat_checkbox_indeterminateChange_25_listener","directives","MatCard","MatCardContent","MatCheckbox","NgControlStatus","NgModel","MatRadioGroup","MatRadioButton","styles","CheckboxExamplesModule","CheckboxOverviewExample","task","subtasks","allComplete","prototype","every","someComplete","filter","length","setAll","forEach","CheckboxOverviewExample_Factory","CheckboxOverviewExample_Template","CheckboxOverviewExample_Template_mat_checkbox_change_7_listener","ɵɵtemplate","NgForOf","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","CheckboxExamplesModule_Factory","imports","CommonModule","MatCardModule","MatCheckboxModule","MatRadioModule","FormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/radio')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/checkbox', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/card', '@angular/material/checkbox', '@angular/material/radio'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.checkbox = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.card, global.ng.material.checkbox, global.ng.material.radio));\n}(this, (function (exports, i2, i0, i3, i1, i2$1, i4) { 'use strict';\n\n    /**\n     * @title Configurable checkbox\n     */\n    var CheckboxConfigurableExample = /** @class */ (function () {\n        function CheckboxConfigurableExample() {\n            this.checked = false;\n            this.indeterminate = false;\n            this.labelPosition = 'after';\n            this.disabled = false;\n        }\n        return CheckboxConfigurableExample;\n    }());\n    CheckboxConfigurableExample.ɵfac = function CheckboxConfigurableExample_Factory(t) { return new (t || CheckboxConfigurableExample)(); };\n    CheckboxConfigurableExample.ɵcmp = i0.ɵɵdefineComponent({ type: CheckboxConfigurableExample, selectors: [[\"checkbox-configurable-example\"]], decls: 27, vars: 8, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"after\", 1, \"example-margin\"], [\"value\", \"before\", 1, \"example-margin\"], [1, \"result\"], [1, \"example-margin\", 3, \"ngModel\", \"indeterminate\", \"labelPosition\", \"disabled\", \"ngModelChange\", \"indeterminateChange\"]], template: function CheckboxConfigurableExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-card\");\n                i0.ɵɵelementStart(1, \"mat-card-content\");\n                i0.ɵɵelementStart(2, \"h2\", 0);\n                i0.ɵɵtext(3, \"Checkbox configuration\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(4, \"section\", 1);\n                i0.ɵɵelementStart(5, \"mat-checkbox\", 2);\n                i0.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_5_listener($event) { return ctx.checked = $event; });\n                i0.ɵɵtext(6, \"Checked\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(7, \"mat-checkbox\", 2);\n                i0.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_7_listener($event) { return ctx.indeterminate = $event; });\n                i0.ɵɵtext(8, \"Indeterminate\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(9, \"section\", 1);\n                i0.ɵɵelementStart(10, \"label\", 3);\n                i0.ɵɵtext(11, \"Align:\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(12, \"mat-radio-group\", 4);\n                i0.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_radio_group_ngModelChange_12_listener($event) { return ctx.labelPosition = $event; });\n                i0.ɵɵelementStart(13, \"mat-radio-button\", 5);\n                i0.ɵɵtext(14, \"After\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(15, \"mat-radio-button\", 6);\n                i0.ɵɵtext(16, \"Before\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(17, \"section\", 1);\n                i0.ɵɵelementStart(18, \"mat-checkbox\", 2);\n                i0.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.disabled = $event; });\n                i0.ɵɵtext(19, \"Disabled\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(20, \"mat-card\", 7);\n                i0.ɵɵelementStart(21, \"mat-card-content\");\n                i0.ɵɵelementStart(22, \"h2\", 0);\n                i0.ɵɵtext(23, \"Result\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(24, \"section\", 1);\n                i0.ɵɵelementStart(25, \"mat-checkbox\", 8);\n                i0.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_25_listener($event) { return ctx.checked = $event; })(\"indeterminateChange\", function CheckboxConfigurableExample_Template_mat_checkbox_indeterminateChange_25_listener($event) { return ctx.indeterminate = $event; });\n                i0.ɵɵtext(26, \" I'm a checkbox \");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(5);\n                i0.ɵɵproperty(\"ngModel\", ctx.checked);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"ngModel\", ctx.indeterminate);\n                i0.ɵɵadvance(5);\n                i0.ɵɵproperty(\"ngModel\", ctx.labelPosition);\n                i0.ɵɵadvance(6);\n                i0.ɵɵproperty(\"ngModel\", ctx.disabled);\n                i0.ɵɵadvance(7);\n                i0.ɵɵproperty(\"ngModel\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"labelPosition\", ctx.labelPosition)(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i1.MatCard, i1.MatCardContent, i2$1.MatCheckbox, i3.NgControlStatus, i3.NgModel, i4.MatRadioGroup, i4.MatRadioButton], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 0 10px;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(CheckboxConfigurableExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'checkbox-configurable-example',\n                        templateUrl: 'checkbox-configurable-example.html',\n                        styleUrls: ['checkbox-configurable-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function CheckboxOverviewExample_li_11_Template(rf, ctx) {\n        if (rf & 1) {\n            var _r3_1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"li\");\n            i0.ɵɵelementStart(1, \"mat-checkbox\", 6);\n            i0.ɵɵlistener(\"ngModelChange\", function CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r3_1); var subtask_r1 = ctx.$implicit; return subtask_r1.completed = $event; })(\"ngModelChange\", function CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener() { i0.ɵɵrestoreView(_r3_1); var ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.updateAllComplete(); });\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var subtask_r1 = ctx.$implicit;\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", subtask_r1.completed)(\"color\", subtask_r1.color);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", subtask_r1.name, \" \");\n        }\n    }\n    /**\n     * @title Basic checkboxes\n     */\n    var CheckboxOverviewExample = /** @class */ (function () {\n        function CheckboxOverviewExample() {\n            this.task = {\n                name: 'Indeterminate',\n                completed: false,\n                color: 'primary',\n                subtasks: [\n                    { name: 'Primary', completed: false, color: 'primary' },\n                    { name: 'Accent', completed: false, color: 'accent' },\n                    { name: 'Warn', completed: false, color: 'warn' }\n                ]\n            };\n            this.allComplete = false;\n        }\n        CheckboxOverviewExample.prototype.updateAllComplete = function () {\n            this.allComplete = this.task.subtasks != null && this.task.subtasks.every(function (t) { return t.completed; });\n        };\n        CheckboxOverviewExample.prototype.someComplete = function () {\n            if (this.task.subtasks == null) {\n                return false;\n            }\n            return this.task.subtasks.filter(function (t) { return t.completed; }).length > 0 && !this.allComplete;\n        };\n        CheckboxOverviewExample.prototype.setAll = function (completed) {\n            this.allComplete = completed;\n            if (this.task.subtasks == null) {\n                return;\n            }\n            this.task.subtasks.forEach(function (t) { return t.completed = completed; });\n        };\n        return CheckboxOverviewExample;\n    }());\n    CheckboxOverviewExample.ɵfac = function CheckboxOverviewExample_Factory(t) { return new (t || CheckboxOverviewExample)(); };\n    CheckboxOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: CheckboxOverviewExample, selectors: [[\"checkbox-overview-example\"]], decls: 12, vars: 5, consts: [[1, \"example-section\"], [1, \"example-margin\"], [1, \"example-margin\", 3, \"disabled\"], [1, \"example-list-section\"], [1, \"example-margin\", 3, \"checked\", \"indeterminate\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"color\", \"ngModelChange\"]], template: function CheckboxOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"section\", 0);\n                i0.ɵɵelementStart(1, \"mat-checkbox\", 1);\n                i0.ɵɵtext(2, \"Check me!\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(3, \"mat-checkbox\", 2);\n                i0.ɵɵtext(4, \"Disabled\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(5, \"section\", 0);\n                i0.ɵɵelementStart(6, \"span\", 3);\n                i0.ɵɵelementStart(7, \"mat-checkbox\", 4);\n                i0.ɵɵlistener(\"change\", function CheckboxOverviewExample_Template_mat_checkbox_change_7_listener($event) { return ctx.setAll($event.checked); });\n                i0.ɵɵtext(8);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(9, \"span\", 3);\n                i0.ɵɵelementStart(10, \"ul\");\n                i0.ɵɵtemplate(11, CheckboxOverviewExample_li_11_Template, 3, 3, \"li\", 5);\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"disabled\", true);\n                i0.ɵɵadvance(4);\n                i0.ɵɵproperty(\"checked\", ctx.allComplete)(\"indeterminate\", ctx.someComplete());\n                i0.ɵɵadvance(1);\n                i0.ɵɵtextInterpolate1(\" \", ctx.task.name, \" \");\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"ngForOf\", ctx.task.subtasks);\n            }\n        }, directives: [i2$1.MatCheckbox, i2.NgForOf, i3.NgControlStatus, i3.NgModel], styles: [\".example-section[_ngcontent-%COMP%] {\\n  margin: 12px 0;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 0 12px;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  margin-top: 4px;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(CheckboxOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'checkbox-overview-example',\n                        templateUrl: 'checkbox-overview-example.html',\n                        styleUrls: ['checkbox-overview-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        CheckboxConfigurableExample,\n        CheckboxOverviewExample,\n    ];\n    var CheckboxExamplesModule = /** @class */ (function () {\n        function CheckboxExamplesModule() {\n        }\n        return CheckboxExamplesModule;\n    }());\n    CheckboxExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: CheckboxExamplesModule });\n    CheckboxExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function CheckboxExamplesModule_Factory(t) { return new (t || CheckboxExamplesModule)(); }, imports: [[\n                i2.CommonModule,\n                i1.MatCardModule,\n                i2$1.MatCheckboxModule,\n                i4.MatRadioModule,\n                i3.FormsModule,\n            ]] });\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CheckboxExamplesModule, { declarations: [CheckboxConfigurableExample,\n                CheckboxOverviewExample], imports: [i2.CommonModule,\n                i1.MatCardModule,\n                i2$1.MatCheckboxModule,\n                i4.MatRadioModule,\n                i3.FormsModule], exports: [CheckboxConfigurableExample,\n                CheckboxOverviewExample] });\n    })();\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(CheckboxExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i2.CommonModule,\n                            i1.MatCardModule,\n                            i2$1.MatCheckboxModule,\n                            i4.MatRadioModule,\n                            i3.FormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CheckboxConfigurableExample = CheckboxConfigurableExample;\n    exports.CheckboxExamplesModule = CheckboxExamplesModule;\n    exports.CheckboxOverviewExample = CheckboxOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-checkbox.umd.js.map\n"]}