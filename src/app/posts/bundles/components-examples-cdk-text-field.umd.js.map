{"version":3,"file":"components-examples-cdk-text-field.umd.js","sources":["../../../../../src/components-examples/cdk/text-field/text-field-autofill-directive/text-field-autofill-directive-example.html","../../../../../src/components-examples/cdk/text-field/text-field-autofill-directive/text-field-autofill-directive-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autofill-monitor/text-field-autofill-monitor-example.html","../../../../../src/components-examples/cdk/text-field/text-field-autofill-monitor/text-field-autofill-monitor-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autosize-textarea/text-field-autosize-textarea-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autosize-textarea/text-field-autosize-textarea-example.html","../../../../../src/components-examples/cdk/text-field/index.ts","../../../../../src/components-examples/cdk/text-field/text-field_public_index.ts"],"sourcesContent":["<form (submit)=\"$event.preventDefault()\">\n  <mat-form-field>\n    <mat-label>First name</mat-label>\n    <input matInput (cdkAutofill)=\"firstNameAutofilled = $event.isAutofilled\">\n    <mat-hint *ngIf=\"firstNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Last name</mat-label>\n    <input matInput (cdkAutofill)=\"lastNameAutofilled = $event.isAutofilled\">\n    <mat-hint *ngIf=\"lastNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <button mat-raised-button>Submit</button>\n</form>\n","import {Component} from '@angular/core';\n\n/** @title Monitoring autofill state with cdkAutofill */\n@Component({\n  selector: 'text-field-autofill-directive-example',\n  templateUrl: './text-field-autofill-directive-example.html',\n  styleUrls: ['./text-field-autofill-directive-example.css'],\n})\nexport class TextFieldAutofillDirectiveExample {\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n}\n","<form (submit)=\"$event.preventDefault()\">\n  <mat-form-field>\n    <mat-label>First name</mat-label>\n    <input matInput #first>\n    <mat-hint *ngIf=\"firstNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Last name</mat-label>\n    <input matInput #last>\n    <mat-hint *ngIf=\"lastNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <button mat-raised-button>Submit</button>\n</form>\n","import {AutofillMonitor} from '@angular/cdk/text-field';\nimport {AfterViewInit, Component, ElementRef, OnDestroy, ViewChild} from '@angular/core';\n\n/** @title Monitoring autofill state with AutofillMonitor */\n@Component({\n  selector: 'text-field-autofill-monitor-example',\n  templateUrl: './text-field-autofill-monitor-example.html',\n  styleUrls: ['./text-field-autofill-monitor-example.css'],\n})\nexport class TextFieldAutofillMonitorExample implements AfterViewInit, OnDestroy {\n  @ViewChild('first', {read: ElementRef}) firstName: ElementRef<HTMLElement>;\n  @ViewChild('last', {read: ElementRef}) lastName: ElementRef<HTMLElement>;\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n\n  constructor(private _autofill: AutofillMonitor) {}\n\n  ngAfterViewInit() {\n    this._autofill.monitor(this.firstName)\n        .subscribe(e => this.firstNameAutofilled = e.isAutofilled);\n    this._autofill.monitor(this.lastName)\n        .subscribe(e => this.lastNameAutofilled = e.isAutofilled);\n  }\n\n  ngOnDestroy() {\n    this._autofill.stopMonitoring(this.firstName);\n    this._autofill.stopMonitoring(this.lastName);\n  }\n}\n","import {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Component, NgZone, ViewChild} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/** @title Auto-resizing textarea */\n@Component({\n  selector: 'text-field-autosize-textarea-example',\n  templateUrl: './text-field-autosize-textarea-example.html',\n  styleUrls: ['./text-field-autosize-textarea-example.css'],\n})\nexport class TextFieldAutosizeTextareaExample {\n  constructor(private _ngZone: NgZone) {}\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable.pipe(take(1))\n        .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n}\n","<mat-form-field>\n  <mat-label>Font size</mat-label>\n  <mat-select #fontSize value=\"16px\" (selectionChange)=\"triggerResize()\">\n    <mat-option value=\"10px\">10px</mat-option>\n    <mat-option value=\"12px\">12px</mat-option>\n    <mat-option value=\"14px\">14px</mat-option>\n    <mat-option value=\"16px\">16px</mat-option>\n    <mat-option value=\"18px\">18px</mat-option>\n    <mat-option value=\"20px\">20px</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<mat-form-field [style.fontSize]=\"fontSize.value\">\n  <mat-label>Autosize textarea</mat-label>\n  <textarea matInput\n            cdkTextareaAutosize\n            #autosize=\"cdkTextareaAutosize\"\n            cdkAutosizeMinRows=\"1\"\n            cdkAutosizeMaxRows=\"5\"></textarea>\n</mat-form-field>\n","import {TextFieldModule} from '@angular/cdk/text-field';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {\n  TextFieldAutofillDirectiveExample\n} from './text-field-autofill-directive/text-field-autofill-directive-example';\nimport {\n  TextFieldAutofillMonitorExample\n} from './text-field-autofill-monitor/text-field-autofill-monitor-example';\nimport {\n  TextFieldAutosizeTextareaExample\n} from './text-field-autosize-textarea/text-field-autosize-textarea-example';\n\nexport {\n  TextFieldAutofillDirectiveExample,\n  TextFieldAutofillMonitorExample,\n  TextFieldAutosizeTextareaExample,\n};\n\nconst EXAMPLES = [\n  TextFieldAutofillDirectiveExample,\n  TextFieldAutofillMonitorExample,\n  TextFieldAutosizeTextareaExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TextFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CdkTextFieldExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","Component","ElementRef","i0.ɵɵelement","ViewChild","take","i0.ɵɵstyleProp","CommonModule","TextFieldModule","MatButtonModule","MatInputModule","MatSelectModule","NgModule"],"mappings":"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"}