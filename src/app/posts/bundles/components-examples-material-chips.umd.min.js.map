{"version":3,"sources":["src/components-examples/components-examples-material-chips.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","chips","cdk","dragDrop","common","core","forms","autocomplete","formField","icon","keycodes","rxjs","operators","this","i2","i3","i0","i4","i5","i2$1","i1","i6","i7","_c0","_c1","ChipsAutocompleteExample_mat_chip_3_mat_icon_2_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ChipsAutocompleteExample_mat_chip_3_Template","_r8_1","ɵɵgetCurrentView","ɵɵlistener","ChipsAutocompleteExample_mat_chip_3_Template_mat_chip_removed_0_listener","ɵɵrestoreView","fruit_r5","$implicit","ɵɵnextContext","remove","ɵɵtemplate","ctx_r1","ɵɵproperty","selectable","removable","ɵɵadvance","ɵɵtextInterpolate1","ChipsAutocompleteExample_mat_option_8_Template","fruit_r9","ChipsAutocompleteExample","_this","visible","separatorKeysCodes","ENTER","COMMA","fruitCtrl","FormControl","fruits","allFruits","filteredFruits","valueChanges","pipe","startWith","map","fruit","_filter","slice","prototype","add","event","input","value","trim","push","setValue","index","indexOf","splice","selected","option","viewValue","fruitInput","nativeElement","filterValue","toLowerCase","filter","ChipsDragDropExample_mat_chip_1_Template","vegetable_r1","name","ɵfac","ChipsAutocompleteExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","ChipsAutocompleteExample_Query","_t","ɵɵviewQuery","ɵɵqueryRefresh","ɵɵloadQuery","first","matAutocomplete","decls","vars","consts","template","ChipsAutocompleteExample_Template","ChipsAutocompleteExample_Template_input_matChipInputTokenEnd_4_listener","$event","ChipsAutocompleteExample_Template_mat_autocomplete_optionSelected_6_listener","ɵɵpipe","_r0","ɵɵreference","_r3","ɵɵpipeBind1","directives","MatFormField","MatChipList","NgForOf","DefaultValueAccessor","MatAutocompleteTrigger","MatChipInput","NgControlStatus","FormControlDirective","MatAutocomplete","MatChip","NgIf","MatIcon","MatChipRemove","MatOption","pipes","AsyncPipe","styles","ChipsDragDropExample","vegetables","drop","moveItemInArray","previousIndex","currentIndex","ChipsInputExample_mat_chip_3_mat_icon_2_Template","ChipsInputExample_mat_chip_3_Template","_r5_1","ChipsInputExample_mat_chip_3_Template_mat_chip_removed_0_listener","fruit_r2","ChipsDragDropExample_Factory","ChipsDragDropExample_Template","ChipsDragDropExample_Template_mat_chip_list_cdkDropListDropped_0_listener","CdkDropList","CdkDrag","ChipsOverviewExample","ChipsStackedExample","ChipsExamplesModule","ChipsInputExample","addOnBlur","ChipsStackedExample_mat_chip_1_Template","chip_r1","color","ChipsInputExample_Factory","ChipsInputExample_Template","ChipsInputExample_Template_input_matChipInputTokenEnd_4_listener","ChipsOverviewExample_Factory","ChipsOverviewExample_Template","encapsulation","availableColors","undefined","ChipsStackedExample_Factory","ChipsStackedExample_Template","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ChipsExamplesModule_Factory","imports","CommonModule","DragDropModule","MatAutocompleteModule","MatChipsModule","MatIconModule","MatFormFieldModule","ReactiveFormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations","Object","defineProperty"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,0BAA2BA,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,kCAAmCA,QAAQ,2BAA4BA,QAAQ,gCAAiCA,QAAQ,0BAA2BA,QAAQ,yBAA0BA,QAAQ,kBAAmBA,QAAQ,2BAClZ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,8CAA+C,CAAC,UAAW,yBAA0B,kBAAmB,gBAAiB,iBAAkB,iCAAkC,0BAA2B,+BAAgC,yBAA0B,wBAAyB,iBAAkB,0BAA2BJ,GAClWA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,mBAAqBT,EAAOQ,GAAGC,oBAAsB,GAAIT,EAAOQ,GAAGC,mBAAmBC,SAAWV,EAAOQ,GAAGC,mBAAmBC,UAAY,GAAIV,EAAOQ,GAAGC,mBAAmBC,SAASC,MAAQ,IAAKX,EAAOQ,GAAGI,IAAIC,SAAUb,EAAOQ,GAAGM,OAAQd,EAAOQ,GAAGO,KAAMf,EAAOQ,GAAGQ,MAAOhB,EAAOQ,GAAGE,SAASO,aAAcjB,EAAOQ,GAAGE,SAASC,MAAOX,EAAOQ,GAAGE,SAASQ,UAAWlB,EAAOQ,GAAGE,SAASS,KAAMnB,EAAOQ,GAAGI,IAAIQ,SAAUpB,EAAOqB,KAAKC,UAAWtB,EAAOQ,GAAGE,SAASK,MAH9gB,CAIEQ,MAAM,SAAWrB,EAASsB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAMC,EAAIC,EAAIX,EAAUE,EAAWU,GAAM,aAErF,IAAIC,EAAM,CAAC,cACPC,EAAM,CAAC,QACX,SAASC,EAAwDC,EAAIC,GACxD,EAALD,IACAV,EAAGY,eAAe,EAAG,WAAY,IACjCZ,EAAGa,OAAO,EAAG,UACbb,EAAGc,gBAGX,SAASC,EAA6CL,EAAIC,GACtD,GAAS,EAALD,EAAQ,CACR,IAAIM,EAAQhB,EAAGiB,mBACfjB,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGkB,WAAW,WAAW,SAASC,IAA6EnB,EAAGoB,cAAcJ,GAAQ,IAAIK,EAAWV,EAAIW,UAA4C,OAApBtB,EAAGuB,gBAA+BC,OAAOH,MAC5NrB,EAAGa,OAAO,GACVb,EAAGyB,WAAW,EAAGhB,EAAyD,EAAG,EAAG,WAAY,IAC5FT,EAAGc,eAEP,GAAS,EAALJ,EAAQ,CACR,IAAIW,EAAWV,EAAIW,UACfI,EAAS1B,EAAGuB,gBAChBvB,EAAG2B,WAAW,aAAcD,EAAOE,WAAnC5B,CAA+C,YAAa0B,EAAOG,WACnE7B,EAAG8B,UAAU,GACb9B,EAAG+B,mBAAmB,IAAKV,EAAU,KACrCrB,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,OAAQD,EAAOG,YAGrC,SAASG,EAA+CtB,EAAIC,GAMxD,GALS,EAALD,IACAV,EAAGY,eAAe,EAAG,aAAc,IACnCZ,EAAGa,OAAO,GACVb,EAAGc,gBAEE,EAALJ,EAAQ,CACR,IAAIuB,EAAWtB,EAAIW,UACnBtB,EAAG2B,WAAW,QAASM,GACvBjC,EAAG8B,UAAU,GACb9B,EAAG+B,mBAAmB,IAAKE,EAAU,MAM7C,IAAIC,EAA0C,WAC1C,SAASA,IACL,IAAIC,EAAQtC,KACZA,KAAKuC,SAAU,EACfvC,KAAK+B,YAAa,EAClB/B,KAAKgC,WAAY,EACjBhC,KAAKwC,mBAAqB,CAAC3C,EAAS4C,MAAO5C,EAAS6C,OACpD1C,KAAK2C,UAAY,IAAIvC,EAAGwC,YACxB5C,KAAK6C,OAAS,CAAC,SACf7C,KAAK8C,UAAY,CAAC,QAAS,QAAS,OAAQ,SAAU,cACtD9C,KAAK+C,eAAiB/C,KAAK2C,UAAUK,aAAaC,KAAKlD,EAAUmD,UAAU,MAAOnD,EAAUoD,KAAI,SAAUC,GAAS,OAAOA,EAAQd,EAAMe,QAAQD,GAASd,EAAMQ,UAAUQ,YA8B7K,OA5BAjB,EAAyBkB,UAAUC,IAAM,SAAUC,GAC/C,IAAIC,EAAQD,EAAMC,MACdC,EAAQF,EAAME,OAEbA,GAAS,IAAIC,QACd5D,KAAK6C,OAAOgB,KAAKF,EAAMC,QAGvBF,IACAA,EAAMC,MAAQ,IAElB3D,KAAK2C,UAAUmB,SAAS,OAE5BzB,EAAyBkB,UAAU5B,OAAS,SAAUyB,GAClD,IAAIW,EAAQ/D,KAAK6C,OAAOmB,QAAQZ,GAC5BW,GAAS,GACT/D,KAAK6C,OAAOoB,OAAOF,EAAO,IAGlC1B,EAAyBkB,UAAUW,SAAW,SAAUT,GACpDzD,KAAK6C,OAAOgB,KAAKJ,EAAMU,OAAOC,WAC9BpE,KAAKqE,WAAWC,cAAcX,MAAQ,GACtC3D,KAAK2C,UAAUmB,SAAS,OAE5BzB,EAAyBkB,UAAUF,QAAU,SAAUM,GACnD,IAAIY,EAAcZ,EAAMa,cACxB,OAAOxE,KAAK8C,UAAU2B,QAAO,SAAUrB,GAAS,OAAoD,IAA7CA,EAAMoB,cAAcR,QAAQO,OAEhFlC,EAxCkC,GAiG7C,SAASqC,EAAyC7D,EAAIC,GAMlD,GALS,EAALD,IACAV,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGa,OAAO,GACVb,EAAGc,gBAEE,EAALJ,EAAQ,CACR,IAAI8D,EAAe7D,EAAIW,UACvBtB,EAAG8B,UAAU,GACb9B,EAAG+B,mBAAmB,IAAKyC,EAAaC,KAAM,MAhEtDvC,EAAyBwC,KAAO,SAASC,EAAiCC,GAAK,OAAO,IAAKA,GAAK1C,IAChGA,EAAyB2C,KAAO7E,EAAG8E,kBAAkB,CAAEC,KAAM7C,EAA0B8C,UAAW,CAAC,CAAC,+BAAgCC,UAAW,SAASC,EAA+BxE,EAAIC,GAM/K,IAAIwE,EALC,EAALzE,IACAV,EAAGoF,YAAY7E,GAAK,GACpBP,EAAGoF,YAAY5E,GAAK,IAEf,EAALE,IAEAV,EAAGqF,eAAeF,EAAKnF,EAAGsF,iBAAmB3E,EAAIuD,WAAaiB,EAAGI,OACjEvF,EAAGqF,eAAeF,EAAKnF,EAAGsF,iBAAmB3E,EAAI6E,gBAAkBL,EAAGI,SAE3EE,MAAO,GAAIC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,qBAAsB,CAAC,aAAc,mBAAoB,CAAC,WAAY,IAAK,CAAC,EAAG,aAAc,YAAa,UAAW,EAAG,QAAS,WAAY,CAAC,cAAe,eAAgB,EAAG,cAAe,kBAAmB,kBAAmB,gCAAiC,wBAAyB,CAAC,aAAc,IAAK,CAAC,EAAG,kBAAmB,CAAC,OAAQ,mBAAoB,CAAC,EAAG,QAAS,EAAG,QAAS,WAAY,CAAC,EAAG,aAAc,YAAa,WAAY,CAAC,gBAAiB,GAAI,EAAG,QAAS,CAAC,gBAAiB,IAAK,CAAC,EAAG,UAAWC,SAAU,SAASC,EAAkCnF,EAAIC,GAgBxlB,GAfS,EAALD,IACAV,EAAGY,eAAe,EAAG,iBAAkB,GACvCZ,EAAGY,eAAe,EAAG,gBAAiB,EAAG,GACzCZ,EAAGyB,WAAW,EAAGV,EAA8C,EAAG,EAAG,WAAY,GACjFf,EAAGY,eAAe,EAAG,QAAS,EAAG,GACjCZ,EAAGkB,WAAW,wBAAwB,SAAS4E,EAAwEC,GAAU,OAAOpF,EAAI0C,IAAI0C,MAChJ/F,EAAGc,eACHd,EAAGc,eACHd,EAAGY,eAAe,EAAG,mBAAoB,EAAG,GAC5CZ,EAAGkB,WAAW,kBAAkB,SAAS8E,EAA6ED,GAAU,OAAOpF,EAAIoD,SAASgC,MACpJ/F,EAAGyB,WAAW,EAAGO,EAAgD,EAAG,EAAG,aAAc,GACrFhC,EAAGiG,OAAO,EAAG,SACbjG,EAAGc,eACHd,EAAGc,gBAEE,EAALJ,EAAQ,CACR,IAAIwF,EAAMlG,EAAGmG,YAAY,GACrBC,EAAMpG,EAAGmG,YAAY,GACzBnG,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,UAAWhB,EAAI+B,QAC7B1C,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,cAAehB,EAAI6B,UAAjCxC,CAA4C,kBAAmBoG,EAA/DpG,CAAoE,kBAAmBkG,EAAvFlG,CAA4F,gCAAiCW,EAAI0B,oBACjIrC,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,UAAW3B,EAAGqG,YAAY,EAAG,EAAG1F,EAAIiC,mBAEvD0D,WAAY,CAAClG,EAAGmG,aAAcpG,EAAKqG,YAAazG,EAAG0G,QAASxG,EAAGyG,qBAAsBxG,EAAGyG,uBAAwBxG,EAAKyG,aAAc3G,EAAG4G,gBAAiB5G,EAAG6G,qBAAsB5G,EAAG6G,gBAAiB5G,EAAK6G,QAASjH,EAAGkH,KAAM5G,EAAG6G,QAAS/G,EAAKgH,cAAe7G,EAAG8G,WAAYC,MAAO,CAACtH,EAAGuH,WAAYC,OAAQ,CAAC,gEAiCjT,IAAIC,EAAsC,WACtC,SAASA,IACL3H,KAAK4H,WAAa,CACd,CAAEhD,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,cACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,WAMhB,OAHA+C,EAAqBpE,UAAUsE,KAAO,SAAUpE,GAC5CxD,EAAG6H,gBAAgB9H,KAAK4H,WAAYnE,EAAMsE,cAAetE,EAAMuE,eAE5DL,EAd8B,GAwCzC,SAASM,EAAiDpH,EAAIC,GACjD,EAALD,IACAV,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGa,OAAO,EAAG,UACbb,EAAGc,gBAGX,SAASiH,EAAsCrH,EAAIC,GAC/C,GAAS,EAALD,EAAQ,CACR,IAAIsH,EAAQhI,EAAGiB,mBACfjB,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGkB,WAAW,WAAW,SAAS+G,IAAsEjI,EAAGoB,cAAc4G,GAAQ,IAAIE,EAAWvH,EAAIW,UAA4C,OAApBtB,EAAGuB,gBAA+BC,OAAO0G,MACrNlI,EAAGa,OAAO,GACVb,EAAGyB,WAAW,EAAGqG,EAAkD,EAAG,EAAG,WAAY,GACrF9H,EAAGc,eAEP,GAAS,EAALJ,EAAQ,CACR,IAAIwH,EAAWvH,EAAIW,UACfI,EAAS1B,EAAGuB,gBAChBvB,EAAG2B,WAAW,aAAcD,EAAOE,WAAnC5B,CAA+C,YAAa0B,EAAOG,WACnE7B,EAAG8B,UAAU,GACb9B,EAAG+B,mBAAmB,IAAKmG,EAASzD,KAAM,KAC1CzE,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,OAAQD,EAAOG,YA/CrC2F,EAAqB9C,KAAO,SAASyD,EAA6BvD,GAAK,OAAO,IAAKA,GAAK4C,IACxFA,EAAqB3C,KAAO7E,EAAG8E,kBAAkB,CAAEC,KAAMyC,EAAsBxC,UAAW,CAAC,CAAC,4BAA6BS,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,cAAe,GAAI,yBAA0B,aAAc,EAAG,eAAgB,EAAG,sBAAuB,CAAC,QAAS,cAAe,UAAW,GAAI,EAAG,QAAS,WAAY,CAAC,UAAW,GAAI,EAAG,gBAAiBC,SAAU,SAASwC,EAA8B1H,EAAIC,GACtY,EAALD,IACAV,EAAGY,eAAe,EAAG,gBAAiB,GACtCZ,EAAGkB,WAAW,sBAAsB,SAASmH,EAA0EtC,GAAU,OAAOpF,EAAI+G,KAAK3B,MACjJ/F,EAAGyB,WAAW,EAAG8C,EAA0C,EAAG,EAAG,WAAY,GAC7EvE,EAAGc,gBAEE,EAALJ,IACAV,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,UAAWhB,EAAI8G,cAElCnB,WAAY,CAACnG,EAAKqG,YAAa1G,EAAGwI,YAAavI,EAAG0G,QAAStG,EAAK6G,QAASlH,EAAGyI,SAAUhB,OAAQ,CAAC,yQAyCtG,IAmEIiB,EAkDAC,EAyCAC,EA9JAC,EAAmC,WACnC,SAASA,IACL9I,KAAKuC,SAAU,EACfvC,KAAK+B,YAAa,EAClB/B,KAAKgC,WAAY,EACjBhC,KAAK+I,WAAY,EACjB/I,KAAKwC,mBAAqB,CAAC3C,EAAS4C,MAAO5C,EAAS6C,OACpD1C,KAAK6C,OAAS,CACV,CAAE+B,KAAM,SACR,CAAEA,KAAM,QACR,CAAEA,KAAM,UAqBhB,OAlBAkE,EAAkBvF,UAAUC,IAAM,SAAUC,GACxC,IAAIC,EAAQD,EAAMC,MACdC,EAAQF,EAAME,OAEbA,GAAS,IAAIC,QACd5D,KAAK6C,OAAOgB,KAAK,CAAEe,KAAMjB,EAAMC,SAG/BF,IACAA,EAAMC,MAAQ,KAGtBmF,EAAkBvF,UAAU5B,OAAS,SAAUyB,GAC3C,IAAIW,EAAQ/D,KAAK6C,OAAOmB,QAAQZ,GAC5BW,GAAS,GACT/D,KAAK6C,OAAOoB,OAAOF,EAAO,IAG3B+E,EA/B2B,GAqGtC,SAASE,EAAwCnI,EAAIC,GAMjD,GALS,EAALD,IACAV,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGa,OAAO,GACVb,EAAGc,gBAEE,EAALJ,EAAQ,CACR,IAAIoI,EAAUnI,EAAIW,UAClBtB,EAAG2B,WAAW,QAASmH,EAAQC,OAC/B/I,EAAG8B,UAAU,GACb9B,EAAG+B,mBAAmB,IAAK+G,EAAQrE,KAAM,MA9EjDkE,EAAkBjE,KAAO,SAASsE,EAA0BpE,GAAK,OAAO,IAAKA,GAAK+D,IAClFA,EAAkB9D,KAAO7E,EAAG8E,kBAAkB,CAAEC,KAAM4D,EAAmB3D,UAAW,CAAC,CAAC,wBAAyBS,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,EAAG,qBAAsB,CAAC,aAAc,mBAAoB,CAAC,WAAY,IAAK,CAAC,EAAG,aAAc,YAAa,UAAW,EAAG,QAAS,WAAY,CAAC,cAAe,eAAgB,EAAG,kBAAmB,gCAAiC,wBAAyB,wBAAyB,CAAC,EAAG,aAAc,YAAa,WAAY,CAAC,gBAAiB,GAAI,EAAG,QAAS,CAAC,gBAAiB,KAAMC,SAAU,SAASqD,EAA2BvI,EAAIC,GAWpjB,GAVS,EAALD,IACAV,EAAGY,eAAe,EAAG,iBAAkB,GACvCZ,EAAGY,eAAe,EAAG,gBAAiB,EAAG,GACzCZ,EAAGyB,WAAW,EAAGsG,EAAuC,EAAG,EAAG,WAAY,GAC1E/H,EAAGY,eAAe,EAAG,QAAS,GAC9BZ,EAAGkB,WAAW,wBAAwB,SAASgI,EAAiEnD,GAAU,OAAOpF,EAAI0C,IAAI0C,MACzI/F,EAAGc,eACHd,EAAGc,eACHd,EAAGc,gBAEE,EAALJ,EAAQ,CACR,IAAIwF,EAAMlG,EAAGmG,YAAY,GACzBnG,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,UAAWhB,EAAI+B,QAC7B1C,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,kBAAmBuE,EAAjClG,CAAsC,gCAAiCW,EAAI0B,mBAA3ErC,CAA+F,wBAAyBW,EAAIiI,aAEjItC,WAAY,CAAClG,EAAGmG,aAAcpG,EAAKqG,YAAazG,EAAG0G,QAAStG,EAAKyG,aAAczG,EAAK6G,QAASjH,EAAGkH,KAAM5G,EAAG6G,QAAS/G,EAAKgH,eAAgBI,OAAQ,CAAC,iEAenJiB,EACA,SAASA,OAIQ9D,KAAO,SAASyE,EAA6BvE,GAAK,OAAO,IAAKA,GAAK4D,IACxFA,EAAqB3D,KAAO7E,EAAG8E,kBAAkB,CAAEC,KAAMyD,EAAsBxD,UAAW,CAAC,CAAC,2BAA4BS,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,aAAc,kBAAmB,CAAC,QAAS,UAAW,WAAY,IAAK,CAAC,QAAS,SAAU,WAAY,KAAMC,SAAU,SAASwD,EAA8B1I,EAAIC,GACtS,EAALD,IACAV,EAAGY,eAAe,EAAG,gBAAiB,GACtCZ,EAAGY,eAAe,EAAG,YACrBZ,EAAGa,OAAO,EAAG,YACbb,EAAGc,eACHd,EAAGY,eAAe,EAAG,YACrBZ,EAAGa,OAAO,EAAG,YACbb,EAAGc,eACHd,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGa,OAAO,EAAG,gBACbb,EAAGc,eACHd,EAAGY,eAAe,EAAG,WAAY,GACjCZ,EAAGa,OAAO,EAAG,eACbb,EAAGc,eACHd,EAAGc,iBAERwF,WAAY,CAACnG,EAAKqG,YAAarG,EAAK6G,SAAUqC,cAAe,KA2BhEZ,EACA,SAASA,IACL5I,KAAKyJ,gBAAkB,CACnB,CAAE7E,KAAM,OAAQsE,WAAOQ,GACvB,CAAE9E,KAAM,UAAWsE,MAAO,WAC1B,CAAEtE,KAAM,SAAUsE,MAAO,UACzB,CAAEtE,KAAM,OAAQsE,MAAO,WAKfrE,KAAO,SAAS8E,EAA4B5E,GAAK,OAAO,IAAKA,GAAK6D,IACtFA,EAAoB5D,KAAO7E,EAAG8E,kBAAkB,CAAEC,KAAM0D,EAAqBzD,UAAW,CAAC,CAAC,0BAA2BS,MAAO,EAAGC,KAAM,EAAGC,OAAQ,CAAC,CAAC,aAAc,kBAAmB,EAAG,yBAA0B,CAAC,WAAY,GAAI,EAAG,QAAS,EAAG,QAAS,WAAY,CAAC,WAAY,GAAI,EAAG,UAAWC,SAAU,SAAS6D,EAA6B/I,EAAIC,GACvU,EAALD,IACAV,EAAGY,eAAe,EAAG,gBAAiB,GACtCZ,EAAGyB,WAAW,EAAGoH,EAAyC,EAAG,EAAG,WAAY,GAC5E7I,EAAGc,gBAEE,EAALJ,IACAV,EAAG8B,UAAU,GACb9B,EAAG2B,WAAW,UAAWhB,EAAI2I,mBAElChD,WAAY,CAACnG,EAAKqG,YAAazG,EAAG0G,QAAStG,EAAK6G,SAAUO,OAAQ,CAAC,4DAmBtEmB,EACA,SAASA,OAIOgB,KAAO1J,EAAG2J,iBAAiB,CAAE5E,KAAM2D,IACvDA,EAAoBkB,KAAO5J,EAAG6J,iBAAiB,CAAEtL,QAAS,SAASuL,EAA4BlF,GAAK,OAAO,IAAKA,GAAK8D,IAA2BqB,QAAS,CAAC,CAC9IhK,EAAGiK,aACHlK,EAAGmK,eACH/J,EAAGgK,sBACH/J,EAAKgK,eACL9J,EAAG+J,cACHhK,EAAGiK,mBACHpK,EAAGqK,yBAGW,oBAAdC,WAA6BA,YAAcvK,EAAGwK,mBAAmB9B,EAAqB,CAAE+B,aAAc,CAACvI,EACvGsF,EACAmB,EACAH,EACAC,GAAsBsB,QAAS,CAAChK,EAAGiK,aACnClK,EAAGmK,eACH/J,EAAGgK,sBACH/J,EAAKgK,eACL9J,EAAG+J,cACHhK,EAAGiK,mBACHpK,EAAGqK,qBAAsB9L,QAAS,CAAC0D,EACnCsF,EACAmB,EACAH,EACAC,KA0BZjK,EAAQ0D,yBAA2BA,EACnC1D,EAAQgJ,qBAAuBA,EAC/BhJ,EAAQkK,oBAAsBA,EAC9BlK,EAAQmK,kBAAoBA,EAC5BnK,EAAQgK,qBAAuBA,EAC/BhK,EAAQiK,oBAAsBA,EAE9BiC,OAAOC,eAAenM,EAAS,aAAc,CAAEgF,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/drag-drop'), require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/autocomplete'), require('@angular/material/chips'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@angular/cdk/keycodes'), require('rxjs/operators'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/chips', ['exports', '@angular/cdk/drag-drop', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/autocomplete', '@angular/material/chips', '@angular/material/form-field', '@angular/material/icon', '@angular/cdk/keycodes', 'rxjs/operators', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.chips = {}), global.ng.cdk.dragDrop, global.ng.common, global.ng.core, global.ng.forms, global.ng.material.autocomplete, global.ng.material.chips, global.ng.material.formField, global.ng.material.icon, global.ng.cdk.keycodes, global.rxjs.operators, global.ng.material.core));\n}(this, (function (exports, i2, i3, i0, i4, i5, i2$1, i1, i6, keycodes, operators, i7) { 'use strict';\n\n    var _c0 = [\"fruitInput\"];\n    var _c1 = [\"auto\"];\n    function ChipsAutocompleteExample_mat_chip_3_mat_icon_2_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-icon\", 11);\n            i0.ɵɵtext(1, \"cancel\");\n            i0.ɵɵelementEnd();\n        }\n    }\n    function ChipsAutocompleteExample_mat_chip_3_Template(rf, ctx) {\n        if (rf & 1) {\n            var _r8_1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"mat-chip\", 9);\n            i0.ɵɵlistener(\"removed\", function ChipsAutocompleteExample_mat_chip_3_Template_mat_chip_removed_0_listener() { i0.ɵɵrestoreView(_r8_1); var fruit_r5 = ctx.$implicit; var ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.remove(fruit_r5); });\n            i0.ɵɵtext(1);\n            i0.ɵɵtemplate(2, ChipsAutocompleteExample_mat_chip_3_mat_icon_2_Template, 2, 0, \"mat-icon\", 10);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var fruit_r5 = ctx.$implicit;\n            var ctx_r1 = i0.ɵɵnextContext();\n            i0.ɵɵproperty(\"selectable\", ctx_r1.selectable)(\"removable\", ctx_r1.removable);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", fruit_r5, \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx_r1.removable);\n        }\n    }\n    function ChipsAutocompleteExample_mat_option_8_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-option\", 12);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var fruit_r9 = ctx.$implicit;\n            i0.ɵɵproperty(\"value\", fruit_r9);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", fruit_r9, \" \");\n        }\n    }\n    /**\n     * @title Chips Autocomplete\n     */\n    var ChipsAutocompleteExample = /** @class */ (function () {\n        function ChipsAutocompleteExample() {\n            var _this = this;\n            this.visible = true;\n            this.selectable = true;\n            this.removable = true;\n            this.separatorKeysCodes = [keycodes.ENTER, keycodes.COMMA];\n            this.fruitCtrl = new i4.FormControl();\n            this.fruits = ['Lemon'];\n            this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n            this.filteredFruits = this.fruitCtrl.valueChanges.pipe(operators.startWith(null), operators.map(function (fruit) { return fruit ? _this._filter(fruit) : _this.allFruits.slice(); }));\n        }\n        ChipsAutocompleteExample.prototype.add = function (event) {\n            var input = event.input;\n            var value = event.value;\n            // Add our fruit\n            if ((value || '').trim()) {\n                this.fruits.push(value.trim());\n            }\n            // Reset the input value\n            if (input) {\n                input.value = '';\n            }\n            this.fruitCtrl.setValue(null);\n        };\n        ChipsAutocompleteExample.prototype.remove = function (fruit) {\n            var index = this.fruits.indexOf(fruit);\n            if (index >= 0) {\n                this.fruits.splice(index, 1);\n            }\n        };\n        ChipsAutocompleteExample.prototype.selected = function (event) {\n            this.fruits.push(event.option.viewValue);\n            this.fruitInput.nativeElement.value = '';\n            this.fruitCtrl.setValue(null);\n        };\n        ChipsAutocompleteExample.prototype._filter = function (value) {\n            var filterValue = value.toLowerCase();\n            return this.allFruits.filter(function (fruit) { return fruit.toLowerCase().indexOf(filterValue) === 0; });\n        };\n        return ChipsAutocompleteExample;\n    }());\n    ChipsAutocompleteExample.ɵfac = function ChipsAutocompleteExample_Factory(t) { return new (t || ChipsAutocompleteExample)(); };\n    ChipsAutocompleteExample.ɵcmp = i0.ɵɵdefineComponent({ type: ChipsAutocompleteExample, selectors: [[\"chips-autocomplete-example\"]], viewQuery: function ChipsAutocompleteExample_Query(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵviewQuery(_c0, true);\n                i0.ɵɵviewQuery(_c1, true);\n            }\n            if (rf & 2) {\n                var _t;\n                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\n                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n            }\n        }, decls: 10, vars: 8, consts: [[1, \"example-chip-list\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"], [3, \"value\"]], template: function ChipsAutocompleteExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n                i0.ɵɵelementStart(1, \"mat-chip-list\", 1, 2);\n                i0.ɵɵtemplate(3, ChipsAutocompleteExample_mat_chip_3_Template, 3, 4, \"mat-chip\", 3);\n                i0.ɵɵelementStart(4, \"input\", 4, 5);\n                i0.ɵɵlistener(\"matChipInputTokenEnd\", function ChipsAutocompleteExample_Template_input_matChipInputTokenEnd_4_listener($event) { return ctx.add($event); });\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(6, \"mat-autocomplete\", 6, 7);\n                i0.ɵɵlistener(\"optionSelected\", function ChipsAutocompleteExample_Template_mat_autocomplete_optionSelected_6_listener($event) { return ctx.selected($event); });\n                i0.ɵɵtemplate(8, ChipsAutocompleteExample_mat_option_8_Template, 2, 2, \"mat-option\", 8);\n                i0.ɵɵpipe(9, \"async\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0.ɵɵreference(2);\n                var _r3 = i0.ɵɵreference(7);\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r3)(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n                i0.ɵɵadvance(4);\n                i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 6, ctx.filteredFruits));\n            }\n        }, directives: [i1.MatFormField, i2$1.MatChipList, i3.NgForOf, i4.DefaultValueAccessor, i5.MatAutocompleteTrigger, i2$1.MatChipInput, i4.NgControlStatus, i4.FormControlDirective, i5.MatAutocomplete, i2$1.MatChip, i3.NgIf, i6.MatIcon, i2$1.MatChipRemove, i7.MatOption], pipes: [i3.AsyncPipe], styles: [\".example-chip-list[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsAutocompleteExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'chips-autocomplete-example',\n                        templateUrl: 'chips-autocomplete-example.html',\n                        styleUrls: ['chips-autocomplete-example.css'],\n                    }]\n            }], function () { return []; }, { fruitInput: [{\n                    type: i0.ViewChild,\n                    args: ['fruitInput']\n                }], matAutocomplete: [{\n                    type: i0.ViewChild,\n                    args: ['auto']\n                }] });\n    })();\n\n    function ChipsDragDropExample_mat_chip_1_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-chip\", 2);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var vegetable_r1 = ctx.$implicit;\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", vegetable_r1.name, \" \");\n        }\n    }\n    /**\n     * @title Chips Drag and Drop\n     */\n    var ChipsDragDropExample = /** @class */ (function () {\n        function ChipsDragDropExample() {\n            this.vegetables = [\n                { name: 'apple' },\n                { name: 'banana' },\n                { name: 'strawberry' },\n                { name: 'orange' },\n                { name: 'kiwi' },\n                { name: 'cherry' },\n            ];\n        }\n        ChipsDragDropExample.prototype.drop = function (event) {\n            i2.moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\n        };\n        return ChipsDragDropExample;\n    }());\n    ChipsDragDropExample.ɵfac = function ChipsDragDropExample_Factory(t) { return new (t || ChipsDragDropExample)(); };\n    ChipsDragDropExample.ɵcmp = i0.ɵɵdefineComponent({ type: ChipsDragDropExample, selectors: [[\"chips-drag-drop-example\"]], decls: 2, vars: 1, consts: [[\"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"example-chip\", 3, \"cdkDropListDropped\"], [\"class\", \"example-box\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"example-box\"]], template: function ChipsDragDropExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-chip-list\", 0);\n                i0.ɵɵlistener(\"cdkDropListDropped\", function ChipsDragDropExample_Template_mat_chip_list_cdkDropListDropped_0_listener($event) { return ctx.drop($event); });\n                i0.ɵɵtemplate(1, ChipsDragDropExample_mat_chip_1_Template, 2, 1, \"mat-chip\", 1);\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"ngForOf\", ctx.vegetables);\n            }\n        }, directives: [i2$1.MatChipList, i2.CdkDropList, i3.NgForOf, i2$1.MatChip, i2.CdkDrag], styles: [\".example-box.cdk-drag-animating[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.example-chip[_ngcontent-%COMP%]   .cdk-drop-list-dragging[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsDragDropExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'chips-drag-drop-example',\n                        templateUrl: 'chips-drag-drop-example.html',\n                        styleUrls: ['chips-drag-drop-example.css']\n                    }]\n            }], null, null);\n    })();\n\n    function ChipsInputExample_mat_chip_3_mat_icon_2_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-icon\", 7);\n            i0.ɵɵtext(1, \"cancel\");\n            i0.ɵɵelementEnd();\n        }\n    }\n    function ChipsInputExample_mat_chip_3_Template(rf, ctx) {\n        if (rf & 1) {\n            var _r5_1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"mat-chip\", 5);\n            i0.ɵɵlistener(\"removed\", function ChipsInputExample_mat_chip_3_Template_mat_chip_removed_0_listener() { i0.ɵɵrestoreView(_r5_1); var fruit_r2 = ctx.$implicit; var ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.remove(fruit_r2); });\n            i0.ɵɵtext(1);\n            i0.ɵɵtemplate(2, ChipsInputExample_mat_chip_3_mat_icon_2_Template, 2, 0, \"mat-icon\", 6);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var fruit_r2 = ctx.$implicit;\n            var ctx_r1 = i0.ɵɵnextContext();\n            i0.ɵɵproperty(\"selectable\", ctx_r1.selectable)(\"removable\", ctx_r1.removable);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", fruit_r2.name, \" \");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx_r1.removable);\n        }\n    }\n    /**\n     * @title Chips with input\n     */\n    var ChipsInputExample = /** @class */ (function () {\n        function ChipsInputExample() {\n            this.visible = true;\n            this.selectable = true;\n            this.removable = true;\n            this.addOnBlur = true;\n            this.separatorKeysCodes = [keycodes.ENTER, keycodes.COMMA];\n            this.fruits = [\n                { name: 'Lemon' },\n                { name: 'Lime' },\n                { name: 'Apple' },\n            ];\n        }\n        ChipsInputExample.prototype.add = function (event) {\n            var input = event.input;\n            var value = event.value;\n            // Add our fruit\n            if ((value || '').trim()) {\n                this.fruits.push({ name: value.trim() });\n            }\n            // Reset the input value\n            if (input) {\n                input.value = '';\n            }\n        };\n        ChipsInputExample.prototype.remove = function (fruit) {\n            var index = this.fruits.indexOf(fruit);\n            if (index >= 0) {\n                this.fruits.splice(index, 1);\n            }\n        };\n        return ChipsInputExample;\n    }());\n    ChipsInputExample.ɵfac = function ChipsInputExample_Factory(t) { return new (t || ChipsInputExample)(); };\n    ChipsInputExample.ɵcmp = i0.ɵɵdefineComponent({ type: ChipsInputExample, selectors: [[\"chips-input-example\"]], decls: 5, vars: 4, consts: [[1, \"example-chip-list\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"]], template: function ChipsInputExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n                i0.ɵɵelementStart(1, \"mat-chip-list\", 1, 2);\n                i0.ɵɵtemplate(3, ChipsInputExample_mat_chip_3_Template, 3, 4, \"mat-chip\", 3);\n                i0.ɵɵelementStart(4, \"input\", 4);\n                i0.ɵɵlistener(\"matChipInputTokenEnd\", function ChipsInputExample_Template_input_matChipInputTokenEnd_4_listener($event) { return ctx.add($event); });\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0.ɵɵreference(2);\n                i0.ɵɵadvance(3);\n                i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n            }\n        }, directives: [i1.MatFormField, i2$1.MatChipList, i3.NgForOf, i2$1.MatChipInput, i2$1.MatChip, i3.NgIf, i6.MatIcon, i2$1.MatChipRemove], styles: [\".example-chip-list[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsInputExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'chips-input-example',\n                        templateUrl: 'chips-input-example.html',\n                        styleUrls: ['chips-input-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Basic chips\n     */\n    var ChipsOverviewExample = /** @class */ (function () {\n        function ChipsOverviewExample() {\n        }\n        return ChipsOverviewExample;\n    }());\n    ChipsOverviewExample.ɵfac = function ChipsOverviewExample_Factory(t) { return new (t || ChipsOverviewExample)(); };\n    ChipsOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: ChipsOverviewExample, selectors: [[\"chips-overview-example\"]], decls: 9, vars: 0, consts: [[\"aria-label\", \"Fish selection\"], [\"color\", \"primary\", \"selected\", \"\"], [\"color\", \"accent\", \"selected\", \"\"]], template: function ChipsOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-chip-list\", 0);\n                i0.ɵɵelementStart(1, \"mat-chip\");\n                i0.ɵɵtext(2, \"One fish\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(3, \"mat-chip\");\n                i0.ɵɵtext(4, \"Two fish\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(5, \"mat-chip\", 1);\n                i0.ɵɵtext(6, \"Primary fish\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementStart(7, \"mat-chip\", 2);\n                i0.ɵɵtext(8, \"Accent fish\");\n                i0.ɵɵelementEnd();\n                i0.ɵɵelementEnd();\n            }\n        }, directives: [i2$1.MatChipList, i2$1.MatChip], encapsulation: 2 });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'chips-overview-example',\n                        templateUrl: 'chips-overview-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    function ChipsStackedExample_mat_chip_1_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-chip\", 2);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var chip_r1 = ctx.$implicit;\n            i0.ɵɵproperty(\"color\", chip_r1.color);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", chip_r1.name, \" \");\n        }\n    }\n    /**\n     * @title Stacked chips\n     */\n    var ChipsStackedExample = /** @class */ (function () {\n        function ChipsStackedExample() {\n            this.availableColors = [\n                { name: 'none', color: undefined },\n                { name: 'Primary', color: 'primary' },\n                { name: 'Accent', color: 'accent' },\n                { name: 'Warn', color: 'warn' }\n            ];\n        }\n        return ChipsStackedExample;\n    }());\n    ChipsStackedExample.ɵfac = function ChipsStackedExample_Factory(t) { return new (t || ChipsStackedExample)(); };\n    ChipsStackedExample.ɵcmp = i0.ɵɵdefineComponent({ type: ChipsStackedExample, selectors: [[\"chips-stacked-example\"]], decls: 2, vars: 1, consts: [[\"aria-label\", \"Color selection\", 1, \"mat-chip-list-stacked\"], [\"selected\", \"\", 3, \"color\", 4, \"ngFor\", \"ngForOf\"], [\"selected\", \"\", 3, \"color\"]], template: function ChipsStackedExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-chip-list\", 0);\n                i0.ɵɵtemplate(1, ChipsStackedExample_mat_chip_1_Template, 2, 2, \"mat-chip\", 1);\n                i0.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"ngForOf\", ctx.availableColors);\n            }\n        }, directives: [i2$1.MatChipList, i3.NgForOf, i2$1.MatChip], styles: [\"mat-chip[_ngcontent-%COMP%] {\\n  max-width: 200px;\\n}\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsStackedExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'chips-stacked-example',\n                        templateUrl: 'chips-stacked-example.html',\n                        styleUrls: ['chips-stacked-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        ChipsAutocompleteExample,\n        ChipsDragDropExample,\n        ChipsInputExample,\n        ChipsOverviewExample,\n        ChipsStackedExample,\n    ];\n    var ChipsExamplesModule = /** @class */ (function () {\n        function ChipsExamplesModule() {\n        }\n        return ChipsExamplesModule;\n    }());\n    ChipsExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: ChipsExamplesModule });\n    ChipsExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function ChipsExamplesModule_Factory(t) { return new (t || ChipsExamplesModule)(); }, imports: [[\n                i3.CommonModule,\n                i2.DragDropModule,\n                i5.MatAutocompleteModule,\n                i2$1.MatChipsModule,\n                i6.MatIconModule,\n                i1.MatFormFieldModule,\n                i4.ReactiveFormsModule,\n            ]] });\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ChipsExamplesModule, { declarations: [ChipsAutocompleteExample,\n                ChipsDragDropExample,\n                ChipsInputExample,\n                ChipsOverviewExample,\n                ChipsStackedExample], imports: [i3.CommonModule,\n                i2.DragDropModule,\n                i5.MatAutocompleteModule,\n                i2$1.MatChipsModule,\n                i6.MatIconModule,\n                i1.MatFormFieldModule,\n                i4.ReactiveFormsModule], exports: [ChipsAutocompleteExample,\n                ChipsDragDropExample,\n                ChipsInputExample,\n                ChipsOverviewExample,\n                ChipsStackedExample] });\n    })();\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ChipsExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i3.CommonModule,\n                            i2.DragDropModule,\n                            i5.MatAutocompleteModule,\n                            i2$1.MatChipsModule,\n                            i6.MatIconModule,\n                            i1.MatFormFieldModule,\n                            i4.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ChipsAutocompleteExample = ChipsAutocompleteExample;\n    exports.ChipsDragDropExample = ChipsDragDropExample;\n    exports.ChipsExamplesModule = ChipsExamplesModule;\n    exports.ChipsInputExample = ChipsInputExample;\n    exports.ChipsOverviewExample = ChipsOverviewExample;\n    exports.ChipsStackedExample = ChipsStackedExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-chips.umd.js.map\n"]}