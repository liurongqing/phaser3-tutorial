{"version":3,"file":"components-examples-material-table.umd.js","sources":["../../../../../src/components-examples/material/table/table-flex-basic/table-flex-basic-example.html","../../../../../src/components-examples/material/table/table-flex-basic/table-flex-basic-example.ts","../../../../../src/components-examples/material/table/table-basic/table-basic-example.html","../../../../../src/components-examples/material/table/table-basic/table-basic-example.ts","../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.html","../../../../../src/components-examples/material/table/table-dynamic-columns/table-dynamic-columns-example.ts","../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.html","../../../../../src/components-examples/material/table/table-expandable-rows/table-expandable-rows-example.ts","../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.html","../../../../../src/components-examples/material/table/table-filtering/table-filtering-example.ts","../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.html","../../../../../src/components-examples/material/table/table-footer-row/table-footer-row-example.ts","../../../../../src/components-examples/material/table/table-http/table-http-example.html","../../../../../src/components-examples/material/table/table-http/table-http-example.ts","../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.html","../../../../../src/components-examples/material/table/table-multiple-header-footer/table-multiple-header-footer-example.ts","../../../../../src/components-examples/material/table/table-overview/table-overview-example.html","../../../../../src/components-examples/material/table/table-overview/table-overview-example.ts","../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.html","../../../../../src/components-examples/material/table/table-pagination/table-pagination-example.ts","../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.html","../../../../../src/components-examples/material/table/table-row-context/table-row-context-example.ts","../../../../../src/components-examples/material/table/table-selection/table-selection-example.html","../../../../../src/components-examples/material/table/table-selection/table-selection-example.ts","../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.html","../../../../../src/components-examples/material/table/table-sorting/table-sorting-example.ts","../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.html","../../../../../src/components-examples/material/table/table-sticky-columns/table-sticky-columns-example.ts","../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.html","../../../../../src/components-examples/material/table/table-sticky-complex-flex/table-sticky-complex-flex-example.ts","../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.html","../../../../../src/components-examples/material/table/table-sticky-complex/table-sticky-complex-example.ts","../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.html","../../../../../src/components-examples/material/table/table-sticky-footer/table-sticky-footer-example.ts","../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.html","../../../../../src/components-examples/material/table/table-sticky-header/table-sticky-header-example.ts","../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.html","../../../../../src/components-examples/material/table/table-text-column-advanced/table-text-column-advanced-example.ts","../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.html","../../../../../src/components-examples/material/table/table-text-column/table-text-column-example.ts","../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.html","../../../../../src/components-examples/material/table/table-wrapped/wrapper-table.html","../../../../../src/components-examples/material/table/table-wrapped/table-wrapped-example.ts","../../../../../src/components-examples/material/table/table-reorderable/table-reorderable-example.html","../../../../../src/components-examples/material/table/table-reorderable/table-reorderable-example.ts","../../../../../src/components-examples/material/table/index.ts","../../../../../src/components-examples/material/table/table_public_index.ts"],"sourcesContent":["<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<mat-table>` (uses display flex)\n */\n@Component({\n  selector: 'table-flex-basic-example',\n  styleUrls: ['table-flex-basic-example.css'],\n  templateUrl: 'table-flex-basic-example.html',\n})\nexport class TableFlexBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n})\nexport class TableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<button mat-raised-button (click)=\"addColumn()\"> Add column </button>\n<button mat-raised-button (click)=\"removeColumn()\"> Remove column </button>\n<button mat-raised-button (click)=\"shuffle()\"> Shuffle </button>\n\n<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table dynamically changing the columns displayed\n */\n@Component({\n  selector: 'table-dynamic-columns-example',\n  styleUrls: ['table-dynamic-columns-example.css'],\n  templateUrl: 'table-dynamic-columns-example.html',\n})\nexport class TableDynamicColumnsExample {\n  displayedColumns: string[] = ['name', 'weight', 'symbol', 'position'];\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n  data: PeriodicElement[] = ELEMENT_DATA;\n\n  addColumn() {\n    const randomColumn = Math.floor(Math.random() * this.displayedColumns.length);\n    this.columnsToDisplay.push(this.displayedColumns[randomColumn]);\n  }\n\n  removeColumn() {\n    if (this.columnsToDisplay.length) {\n      this.columnsToDisplay.pop();\n    }\n  }\n\n  shuffle() {\n    let currentIndex = this.columnsToDisplay.length;\n    while (0 !== currentIndex) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // Swap\n      let temp = this.columnsToDisplay[currentIndex];\n      this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\n      this.columnsToDisplay[randomIndex] = temp;\n    }\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <div class=\"example-element-position\"> {{element.position}} </div>\n          <div class=\"example-element-symbol\"> {{element.symbol}} </div>\n          <div class=\"example-element-name\"> {{element.name}} </div>\n          <div class=\"example-element-weight\"> {{element.weight}} </div>\n        </div>\n        <div class=\"example-element-description\">\n          {{element.description}}\n          <span class=\"example-element-description-attribution\"> -- Wikipedia </span>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n/**\n * @title Table with expandable rows\n */\n@Component({\n  selector: 'table-expandable-rows-example',\n  styleUrls: ['table-expandable-rows-example.css'],\n  templateUrl: 'table-expandable-rows-example.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableExpandableRowsExample {\n  dataSource = ELEMENT_DATA;\n  columnsToDisplay = ['name', 'weight', 'symbol', 'position'];\n  expandedElement: PeriodicElement | null;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n  description: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    weight: 1.0079,\n    symbol: 'H',\n    description: `Hydrogen is a chemical element with symbol H and atomic number 1. With a standard\n        atomic weight of 1.008, hydrogen is the lightest element on the periodic table.`\n  }, {\n    position: 2,\n    name: 'Helium',\n    weight: 4.0026,\n    symbol: 'He',\n    description: `Helium is a chemical element with symbol He and atomic number 2. It is a\n        colorless, odorless, tasteless, non-toxic, inert, monatomic gas, the first in the noble gas\n        group in the periodic table. Its boiling point is the lowest among all the elements.`\n  }, {\n    position: 3,\n    name: 'Lithium',\n    weight: 6.941,\n    symbol: 'Li',\n    description: `Lithium is a chemical element with symbol Li and atomic number 3. It is a soft,\n        silvery-white alkali metal. Under standard conditions, it is the lightest metal and the\n        lightest solid element.`\n  }, {\n    position: 4,\n    name: 'Beryllium',\n    weight: 9.0122,\n    symbol: 'Be',\n    description: `Beryllium is a chemical element with symbol Be and atomic number 4. It is a\n        relatively rare element in the universe, usually occurring as a product of the spallation of\n        larger atomic nuclei that have collided with cosmic rays.`\n  }, {\n    position: 5,\n    name: 'Boron',\n    weight: 10.811,\n    symbol: 'B',\n    description: `Boron is a chemical element with symbol B and atomic number 5. Produced entirely\n        by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a\n        low-abundance element in the Solar system and in the Earth's crust.`\n  }, {\n    position: 6,\n    name: 'Carbon',\n    weight: 12.0107,\n    symbol: 'C',\n    description: `Carbon is a chemical element with symbol C and atomic number 6. It is nonmetallic\n        and tetravalentâmaking four electrons available to form covalent chemical bonds. It belongs\n        to group 14 of the periodic table.`\n  }, {\n    position: 7,\n    name: 'Nitrogen',\n    weight: 14.0067,\n    symbol: 'N',\n    description: `Nitrogen is a chemical element with symbol N and atomic number 7. It was first\n        discovered and isolated by Scottish physician Daniel Rutherford in 1772.`\n  }, {\n    position: 8,\n    name: 'Oxygen',\n    weight: 15.9994,\n    symbol: 'O',\n    description: `Oxygen is a chemical element with symbol O and atomic number 8. It is a member of\n         the chalcogen group on the periodic table, a highly reactive nonmetal, and an oxidizing\n         agent that readily forms oxides with most elements as well as with other compounds.`\n  }, {\n    position: 9,\n    name: 'Fluorine',\n    weight: 18.9984,\n    symbol: 'F',\n    description: `Fluorine is a chemical element with symbol F and atomic number 9. It is the\n        lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard\n        conditions.`\n  }, {\n    position: 10,\n    name: 'Neon',\n    weight: 20.1797,\n    symbol: 'Ne',\n    description: `Neon is a chemical element with symbol Ne and atomic number 10. It is a noble gas.\n        Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about\n        two-thirds the density of air.`\n  },\n];\n","<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n</mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <!-- Row shown when there is no matching data. -->\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with filtering\n */\n@Component({\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n})\nexport class TableFilteringExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Footer row table\n */\n@Component({\n  selector: 'table-footer-row-example',\n  styleUrls: ['table-footer-row-example.css'],\n  templateUrl: 'table-footer-row-example.html',\n})\nexport class TableFooterRowExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\"\n       *ngIf=\"isLoadingResults || isRateLimitReached\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n      GitHub's API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n\n  <div class=\"example-table-container\">\n\n    <table mat-table [dataSource]=\"data\" class=\"example-table\"\n           matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <!-- Number Column -->\n      <ng-container matColumnDef=\"number\">\n        <th mat-header-cell *matHeaderCellDef>#</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.number}}</td>\n      </ng-container>\n\n      <!-- Title Column -->\n      <ng-container matColumnDef=\"title\">\n        <th mat-header-cell *matHeaderCellDef>Title</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.title}}</td>\n      </ng-container>\n\n      <!-- State Column -->\n      <ng-container matColumnDef=\"state\">\n        <th mat-header-cell *matHeaderCellDef>State</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n      </ng-container>\n\n      <!-- Created Column -->\n      <ng-container matColumnDef=\"created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n          Created\n        </th>\n        <td mat-cell *matCellDef=\"let row\">{{row.created_at | date}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\n</div>\n","import {HttpClient} from '@angular/common/http';\nimport {Component, ViewChild, AfterViewInit} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\n/**\n * @title Table retrieving data through HTTP\n */\n@Component({\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n})\nexport class TableHttpExample implements AfterViewInit {\n  displayedColumns: string[] = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDatabase | null;\n  data: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private _httpClient: HttpClient) {}\n\n  ngAfterViewInit() {\n    this.exampleDatabase = new ExampleHttpDatabase(this._httpClient);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n            this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(data => this.data = data);\n  }\n}\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private _httpClient: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this._httpClient.get<GithubApi>(requestUrl);\n  }\n}\n","<table mat-table [dataSource]=\"transactions\" class=\"mat-elevation-z8\">\n  <!-- Item Column -->\n  <ng-container matColumnDef=\"item\">\n    <th mat-header-cell *matHeaderCellDef> Item </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n    <td mat-footer-cell *matFooterCellDef> Total </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"cost\">\n    <th mat-header-cell *matHeaderCellDef> Cost </th>\n    <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n    <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n  </ng-container>\n\n  <!-- Item Description Column -->\n  <ng-container matColumnDef=\"item-description\">\n    <th mat-header-cell *matHeaderCellDef> Name of the item purchased </th>\n  </ng-container>\n\n  <!-- Cost Description Column -->\n  <ng-container matColumnDef=\"cost-description\">\n    <th mat-header-cell *matHeaderCellDef> Cost of the item in USD </th>\n  </ng-container>\n\n  <!-- Disclaimer column -->\n  <ng-container matColumnDef=\"disclaimer\">\n    <td mat-footer-cell *matFooterCellDef colspan=\"2\">\n      Please note that the cost of items displayed are completely and totally made up.\n    </td>\n  </ng-container>\n\n  <!-- The table will render two header rows, one data row per data object, and two footer rows. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\n      class=\"example-first-header-row\">\n  </tr>\n  <tr mat-header-row *matHeaderRowDef=\"['item-description', 'cost-description']\"\n      class=\"example-second-header-row\">\n  </tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <tr mat-footer-row *matFooterRowDef=\"displayedColumns\" class=\"example-first-footer-row\"></tr>\n  <tr mat-footer-row *matFooterRowDef=\"['disclaimer']\" class=\"example-second-footer-row\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Transaction} from '../table-footer-row/table-footer-row-example';\n\n/**\n * @title Table with multiple header and footer rows\n */\n@Component({\n  selector: 'table-multiple-header-footer-example',\n  styleUrls: ['table-multiple-header-footer-example.css'],\n  templateUrl: 'table-multiple-header-footer-example.html',\n})\nexport class TableMultipleHeaderFooterExample {\n  displayedColumns: string[] = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"progress\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Color Column -->\n    <ng-container matColumnDef=\"color\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample implements AfterViewInit {\n  displayedColumns: string[] = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n/**\n * @title Table with pagination\n */\n@Component({\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n})\nexport class TablePaginationExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","<table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n  <!-- Implicit Column -->\n  <ng-container matColumnDef=\"$implicit\">\n    <th mat-header-cell *matHeaderCellDef> $implicit </th>\n    <td mat-cell *matCellDef=\"let data\"> {{data}} </td>\n  </ng-container>\n\n  <!-- Index Column -->\n  <ng-container matColumnDef=\"index\">\n    <th mat-header-cell *matHeaderCellDef> index </th>\n    <td mat-cell *matCellDef=\"let index = index\"> {{index}} </td>\n  </ng-container>\n\n  <!-- Count Column -->\n  <ng-container matColumnDef=\"count\">\n    <th mat-header-cell *matHeaderCellDef> count </th>\n    <td mat-cell *matCellDef=\"let count = count\"> {{count}} </td>\n  </ng-container>\n\n  <!-- First Column -->\n  <ng-container matColumnDef=\"first\">\n    <th mat-header-cell *matHeaderCellDef> first </th>\n    <td mat-cell *matCellDef=\"let first = first\"> {{first}} </td>\n  </ng-container>\n\n  <!-- Last Column -->\n  <ng-container matColumnDef=\"last\">\n    <th mat-header-cell *matHeaderCellDef> last </th>\n    <td mat-cell *matCellDef=\"let last = last\"> {{last}} </td>\n  </ng-container>\n\n  <!-- Even Column -->\n  <ng-container matColumnDef=\"even\">\n    <th mat-header-cell *matHeaderCellDef> even </th>\n    <td mat-cell *matCellDef=\"let even = even\"> {{even}} </td>\n  </ng-container>\n\n  <!-- Odd Column -->\n  <ng-container matColumnDef=\"odd\">\n    <th mat-header-cell *matHeaderCellDef> odd </th>\n    <td mat-cell *matCellDef=\"let odd = odd\"> {{odd}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table showing each row context properties.\n */\n@Component({\n  selector: 'table-row-context-example',\n  styleUrls: ['table-row-context-example.css'],\n  templateUrl: 'table-row-context-example.html',\n})\nexport class TableRowContextExample {\n  displayedColumns: string[] = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\n  data: string[] = ['one', 'two', 'three', 'four', 'five'];\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Checkbox Column -->\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"selection.toggle(row)\">\n  </tr>\n</table>\n","import {SelectionModel} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with selection\n */\n@Component({\n  selector: 'table-selection-example',\n  styleUrls: ['table-selection-example.css'],\n  templateUrl: 'table-selection-example.html',\n})\nexport class TableSelectionExample {\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: PeriodicElement): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table with sorting\n */\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\" sticky>\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <!-- Star Column -->\n    <ng-container matColumnDef=\"star\" stickyEnd>\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-icon>more_vert</mat-icon>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky columns\n */\n@Component({\n  selector: 'table-sticky-columns-example',\n  styleUrls: ['table-sticky-columns-example.css'],\n  templateUrl: 'table-sticky-columns-example.html',\n})\nexport class TableStickyColumnsExample {\n  displayedColumns =\n      ['name', 'position', 'weight', 'symbol', 'position', 'weight', 'symbol', 'star'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <mat-header-cell *matHeaderCellDef> Position </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Position Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Name Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Weight Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Symbol Footer </mat-footer-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <mat-header-cell *matHeaderCellDef> Filler header cell </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> Filler data cell </mat-cell>\n      <mat-footer-cell *matFooterCellDef> Filler footer cell </mat-footer-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></mat-header-row>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></mat-header-row>\n\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></mat-footer-row>\n  </mat-table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Flex-layout tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-flex-example',\n  styleUrls: ['table-sticky-complex-flex-example.css'],\n  templateUrl: 'table-sticky-complex-flex-example.html',\n})\nexport class TableStickyComplexFlexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div>\n  <button mat-raised-button (click)=\"tables.push(tables.length)\">Add table</button>\n  <button mat-raised-button (click)=\"tables.pop()\">Remove table</button>\n</div>\n\n<div>\n  Sticky Headers:\n  <mat-button-toggle-group multiple [value]=\"['header-1']\"\n                           #stickyHeaders=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"header-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"header-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Footers:\n  <mat-button-toggle-group multiple [value]=\"['footer-1']\"\n                           #stickyFooters=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"footer-1\"> Row 1 </mat-button-toggle>\n    <mat-button-toggle value=\"footer-2\"> Row 2 </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div>\n  Sticky Columns:\n  <mat-button-toggle-group multiple [value]=\"['position', 'symbol']\"\n                           #stickyColumns=\"matButtonToggleGroup\"\n                           class=\"example-sticky-toggle-group\">\n    <mat-button-toggle value=\"position\"> Position </mat-button-toggle>\n    <mat-button-toggle value=\"name\"> Name </mat-button-toggle>\n    <mat-button-toggle value=\"weight\"> Weight </mat-button-toggle>\n    <mat-button-toggle value=\"symbol\"> Symbol </mat-button-toggle>\n  </mat-button-toggle-group>\n</div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" *ngFor=\"let table of tables\">\n    <ng-container matColumnDef=\"position\" [sticky]=\"isSticky(stickyColumns, 'position')\">\n      <th mat-header-cell *matHeaderCellDef> Position </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      <td mat-footer-cell *matFooterCellDef> Position Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\" [sticky]=\"isSticky(stickyColumns, 'name')\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      <td mat-footer-cell *matFooterCellDef> Name Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"weight\" [stickyEnd]=\"isSticky(stickyColumns, 'weight')\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n      <td mat-footer-cell *matFooterCellDef> Weight Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"symbol\" [stickyEnd]=\"isSticky(stickyColumns, 'symbol')\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n      <td mat-footer-cell *matFooterCellDef> Symbol Footer </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"filler\">\n      <th mat-header-cell *matHeaderCellDef> Filler header cell </th>\n      <td mat-cell *matCellDef=\"let element\"> Filler data cell </td>\n      <td mat-footer-cell *matFooterCellDef> Filler footer cell </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-1')\"></tr>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: isSticky(stickyHeaders, 'header-2')\"></tr>\n\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-1')\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: isSticky(stickyFooters, 'footer-2')\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\nimport {MatButtonToggleGroup} from '@angular/material/button-toggle';\n\n/**\n * @title Tables with toggle-able sticky headers, footers, and columns\n */\n@Component({\n  selector: 'table-sticky-complex-example',\n  styleUrls: ['table-sticky-complex-example.css'],\n  templateUrl: 'table-sticky-complex-example.html',\n})\nexport class TableStickyComplexExample {\n  displayedColumns: string[] = [];\n  dataSource = ELEMENT_DATA;\n\n  tables = [0];\n\n  constructor() {\n    this.displayedColumns.length = 24;\n    this.displayedColumns.fill('filler');\n\n    // The first two columns should be position and name; the last two columns: weight, symbol\n    this.displayedColumns[0] = 'position';\n    this.displayedColumns[1] = 'name';\n    this.displayedColumns[22] = 'weight';\n    this.displayedColumns[23] = 'symbol';\n  }\n\n  /** Whether the button toggle group contains the id as an active value. */\n  isSticky(buttonToggleGroup: MatButtonToggleGroup, id: string) {\n    return (buttonToggleGroup.value || []).indexOf(id) !== -1;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"transactions\">\n    <!-- Item Column -->\n    <ng-container matColumnDef=\"item\">\n      <th mat-header-cell *matHeaderCellDef> Item </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.item}} </td>\n      <td mat-footer-cell *matFooterCellDef> Total </td>\n    </ng-container>\n\n    <!-- Cost Column -->\n    <ng-container matColumnDef=\"cost\">\n      <th mat-header-cell *matHeaderCellDef> Cost </th>\n      <td mat-cell *matCellDef=\"let transaction\"> {{transaction.cost | currency}} </td>\n      <td mat-footer-cell *matFooterCellDef> {{getTotalCost() | currency}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns; sticky: true\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Table with a sticky footer\n */\n@Component({\n  selector: 'table-sticky-footer-example',\n  styleUrls: ['table-sticky-footer-example.css'],\n  templateUrl: 'table-sticky-footer-example.html',\n})\nexport class TableStickyFooterExample {\n  displayedColumns = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>","import {Component} from '@angular/core';\n\n/**\n * @title Table with sticky header\n */\n@Component({\n  selector: 'table-sticky-header-example',\n  styleUrls: ['table-sticky-header-example.css'],\n  templateUrl: 'table-sticky-header-example.html',\n})\nexport class TableStickyHeaderExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\" [headerText]=\"headerText\"></mat-text-column>\n\n  <!-- Change the header text. -->\n  <mat-text-column name=\"name\" headerText=\"Element\"></mat-text-column>\n\n  <!-- Provide a data accessor for getting the cell text values. -->\n  <mat-text-column name=\"weight\" [dataAccessor]=\"getWeight\"></mat-text-column>\n\n  <!-- Justify the content of the cells to the cell end. -->\n  <mat-text-column name=\"symbol\" justify=\"end\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of 'mat-text-column' with various configurations of the interface.\n */\n@Component({\n  selector: 'table-text-column-advanced-example',\n  styleUrls: ['table-text-column-advanced-example.css'],\n  templateUrl: 'table-text-column-advanced-example.html',\n})\nexport class TableTextColumnAdvancedExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  headerText: string;\n\n  decimalPipe = new DecimalPipe('en-US');\n\n  /** Data accessor function that transforms the weight value to have at most 2 decimal digits. */\n  getWeight = (data: PeriodicElement): string => {\n    const result = this.decimalPipe.transform(data.weight, '1.0-2');\n    return result === null ? '' : result;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <mat-text-column name=\"position\"></mat-text-column>\n  <mat-text-column name=\"name\"></mat-text-column>\n  <mat-text-column name=\"weight\"></mat-text-column>\n  <mat-text-column name=\"symbol\"></mat-text-column>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Use of `mat-text-column` which can be used for simple columns that only need to display\n * a text value for the header and cells.\n */\n@Component({\n  selector: 'table-text-column-example',\n  styleUrls: ['table-text-column-example.css'],\n  templateUrl: 'table-text-column-example.html',\n})\nexport class TableTextColumnExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n","<wrapper-table [dataSource]=\"dataSource\" [columns]=\"displayedColumns\"\n               matSort #sort=\"matSort\">\n  <!-- Custom column definition to be provided to the wrapper table. -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <!-- Custom row definitions to be provided to the wrapper table. -->\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns; \"></tr>\n</wrapper-table>\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-content></ng-content>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <!-- Color Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n</table>\n","import {DataSource} from '@angular/cdk/collections';\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  AfterViewInit,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport {MatSort} from '@angular/material/sort';\nimport {\n  MatColumnDef,\n  MatHeaderRowDef,\n  MatRowDef,\n  MatTable,\n  MatTableDataSource\n} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table example that shows how to wrap a table component for definition and behavior reuse.\n */\n@Component({\n  selector: 'table-wrapped-example',\n  styleUrls: ['table-wrapped-example.css'],\n  templateUrl: 'table-wrapped-example.html',\n})\nexport class TableWrappedExample implements AfterViewInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild('sort') sort: MatSort;\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n\n/**\n * Table component that accepts column and row definitions in its content to be registered to the\n * table.\n */\n@Component({\n  selector: 'wrapper-table',\n  templateUrl: 'wrapper-table.html',\n  styles: [`\n    table {\n      width: 100%;\n    }\n  `]\n})\nexport class WrapperTable<T> implements AfterContentInit {\n  @ContentChildren(MatHeaderRowDef) headerRowDefs: QueryList<MatHeaderRowDef>;\n  @ContentChildren(MatRowDef) rowDefs: QueryList<MatRowDef<T>>;\n  @ContentChildren(MatColumnDef) columnDefs: QueryList<MatColumnDef>;\n\n  @ViewChild(MatTable, {static: true}) table: MatTable<T>;\n\n  @Input() columns: string[];\n\n  @Input() dataSource: DataSource<T>;\n\n  ngAfterContentInit() {\n    this.columnDefs.forEach(columnDef => this.table.addColumnDef(columnDef));\n    this.rowDefs.forEach(rowDef => this.table.addRowDef(rowDef));\n    this.headerRowDefs.forEach(headerRowDef => this.table.addHeaderRowDef(headerRowDef));\n  }\n}\n","<table mat-table\n       [dataSource]=\"dataSource\" \n       cdkDropList\n       cdkDropListOrientation=\"horizontal\"\n       (cdkDropListDropped)=\"drop($event)\">\n\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell cdkDrag *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n/**\n * @title Table with re-orderable columns\n */\n@Component({\n  selector: 'table-reorderable-example',\n  templateUrl: './table-reorderable-example.html',\n  styleUrls: ['./table-reorderable-example.css']\n})\nexport class TableReorderableExample {\n  columns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.columns, event.previousIndex, event.currentIndex);\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nimport {TableFlexBasicExample} from './table-flex-basic/table-flex-basic-example';\nimport {TableBasicExample} from './table-basic/table-basic-example';\nimport {TableDynamicColumnsExample} from './table-dynamic-columns/table-dynamic-columns-example';\nimport {TableExpandableRowsExample} from './table-expandable-rows/table-expandable-rows-example';\nimport {TableFilteringExample} from './table-filtering/table-filtering-example';\nimport {TableFooterRowExample} from './table-footer-row/table-footer-row-example';\nimport {TableHttpExample} from './table-http/table-http-example';\nimport {\n  TableMultipleHeaderFooterExample\n} from './table-multiple-header-footer/table-multiple-header-footer-example';\nimport {TableOverviewExample} from './table-overview/table-overview-example';\nimport {TablePaginationExample} from './table-pagination/table-pagination-example';\nimport {TableRowContextExample} from './table-row-context/table-row-context-example';\nimport {TableSelectionExample} from './table-selection/table-selection-example';\nimport {TableSortingExample} from './table-sorting/table-sorting-example';\nimport {TableStickyColumnsExample} from './table-sticky-columns/table-sticky-columns-example';\nimport {\n  TableStickyComplexFlexExample\n} from './table-sticky-complex-flex/table-sticky-complex-flex-example';\nimport {TableStickyComplexExample} from './table-sticky-complex/table-sticky-complex-example';\nimport {TableStickyFooterExample} from './table-sticky-footer/table-sticky-footer-example';\nimport {TableStickyHeaderExample} from './table-sticky-header/table-sticky-header-example';\nimport {\n  TableTextColumnAdvancedExample\n} from './table-text-column-advanced/table-text-column-advanced-example';\nimport {TableTextColumnExample} from './table-text-column/table-text-column-example';\nimport {TableWrappedExample, WrapperTable} from './table-wrapped/table-wrapped-example';\nimport {TableReorderableExample} from './table-reorderable/table-reorderable-example';\n\nexport {\n  TableBasicExample,          TableFlexBasicExample,\n  TableDynamicColumnsExample, TableExpandableRowsExample,\n  TableFilteringExample,      TableFooterRowExample,\n  TableHttpExample,           TableMultipleHeaderFooterExample,\n  TableOverviewExample,       TablePaginationExample,\n  TableRowContextExample,     TableSelectionExample,\n  TableSortingExample,        TableStickyColumnsExample,\n  TableStickyComplexExample,  TableStickyComplexFlexExample,\n  TableStickyFooterExample,   TableStickyHeaderExample,\n  TableTextColumnExample,     TableTextColumnAdvancedExample,\n  TableWrappedExample,        WrapperTable,\n  TableReorderableExample,\n};\n\nconst EXAMPLES = [\n  TableBasicExample,          TableFlexBasicExample,\n  TableDynamicColumnsExample, TableExpandableRowsExample,\n  TableFilteringExample,      TableFooterRowExample,\n  TableHttpExample,           TableMultipleHeaderFooterExample,\n  TableOverviewExample,       TablePaginationExample,\n  TableRowContextExample,     TableSelectionExample,\n  TableSortingExample,        TableStickyColumnsExample,\n  TableStickyComplexExample,  TableStickyComplexFlexExample,\n  TableStickyFooterExample,   TableStickyHeaderExample,\n  TableTextColumnExample,     TableTextColumnAdvancedExample,\n  TableWrappedExample,        WrapperTable,\n  TableReorderableExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    CdkTableModule,\n    DragDropModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class TableExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelement","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵproperty","Component","ELEMENT_DATA","i0.ɵɵlistener","i0.ɵɵpropertyInterpolate","i0.ɵɵattribute","i0.ɵɵclassProp","trigger","state","style","transition","animate","MatTableDataSource","i0.ɵɵtextInterpolate","merge","startWith","switchMap","map","catchError","observableOf","MatPaginator","MatSort","ViewChild","i0.ɵɵstyleProp","SelectionModel","DecimalPipe","MatHeaderRowDef","MatRowDef","MatColumnDef","MatTable","i0.ɵɵprojection","ContentChildren","Input","moveItemInArray","CommonModule","MatButtonModule","MatButtonToggleModule","MatCheckboxModule","MatIconModule","MatInputModule","MatPaginatorModule","MatProgressSpinnerModule","MatSortModule","MatTableModule","CdkTableModule","DragDropModule","NgModule"],"mappings":"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"}