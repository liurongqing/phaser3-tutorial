{"version":3,"file":"material__form-field.js","sources":["../../../../../../src/components-examples/material/form-field/form-field-appearance/form-field-appearance-example.ts","../../../../../../src/components-examples/material/form-field/form-field-appearance/form-field-appearance-example.html","../../../../../../src/components-examples/material/form-field/form-field-custom-control/form-field-custom-control-example.ts","../../../../../../src/components-examples/material/form-field/form-field-custom-control/form-field-custom-control-example.html","../../../../../../src/components-examples/material/form-field/form-field-custom-control/example-tel-input-example.html","../../../../../../src/components-examples/material/form-field/form-field-error/form-field-error-example.html","../../../../../../src/components-examples/material/form-field/form-field-error/form-field-error-example.ts","../../../../../../src/components-examples/material/form-field/form-field-hint/form-field-hint-example.ts","../../../../../../src/components-examples/material/form-field/form-field-hint/form-field-hint-example.html","../../../../../../src/components-examples/material/form-field/form-field-label/form-field-label-example.ts","../../../../../../src/components-examples/material/form-field/form-field-label/form-field-label-example.html","../../../../../../src/components-examples/material/form-field/form-field-overview/form-field-overview-example.ts","../../../../../../src/components-examples/material/form-field/form-field-overview/form-field-overview-example.html","../../../../../../src/components-examples/material/form-field/form-field-prefix-suffix/form-field-prefix-suffix-example.ts","../../../../../../src/components-examples/material/form-field/form-field-prefix-suffix/form-field-prefix-suffix-example.html","../../../../../../src/components-examples/material/form-field/form-field-theming/form-field-theming-example.html","../../../../../../src/components-examples/material/form-field/form-field-theming/form-field-theming-example.ts","../../../../../../src/components-examples/material/form-field/index.ts","../../../../../../src/components-examples/material/form-field/form-field_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/** @title Form field appearance variants */\n@Component({\n  selector: 'form-field-appearance-example',\n  templateUrl: 'form-field-appearance-example.html',\n})\nexport class FormFieldAppearanceExample {}\n","<p>\n  <mat-form-field appearance=\"legacy\">\n    <mat-label>Legacy form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Standard form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Fill form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Outline form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n","import {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  NgControl,\n  Validators\n} from '@angular/forms';\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\nimport {Subject} from 'rxjs';\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  templateUrl: 'form-field-custom-control-example.html',\n})\nexport class FormFieldCustomControlExample {\n  form: FormGroup = new FormGroup({\n    tel: new FormControl(new MyTel('', '', ''))\n  });\n}\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(\n    public area: string,\n    public exchange: string,\n    public subscriber: string\n  ) {}\n}\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'example-tel-input',\n  templateUrl: 'example-tel-input-example.html',\n  styleUrls: ['example-tel-input-example.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: MyTelInput }],\n  host: {\n    '[class.example-floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n  }\n})\nexport class MyTelInput\n  implements ControlValueAccessor, MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n  @ViewChild('area') areaInput: HTMLInputElement;\n  @ViewChild('exchange') exchangeInput: HTMLInputElement;\n  @ViewChild('subscriber') subscriberInput: HTMLInputElement;\n\n  parts: FormGroup;\n  stateChanges = new Subject<void>();\n  focused = false;\n  controlType = 'example-tel-input';\n  id = `example-tel-input-${MyTelInput.nextId++}`;\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  get empty() {\n    const {\n      value: { area, exchange, subscriber }\n    } = this.parts;\n\n    return !area && !exchange && !subscriber;\n  }\n\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  @Input('aria-describedby') userAriaDescribedBy: string;\n\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.parts.disable() : this.parts.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    if (this.parts.valid) {\n      const {\n        value: { area, exchange, subscriber }\n      } = this.parts;\n      return new MyTel(area, exchange, subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    const { area, exchange, subscriber } = tel || new MyTel('', '', '');\n    this.parts.setValue({ area, exchange, subscriber });\n    this.stateChanges.next();\n  }\n\n  get errorState(): boolean {\n    return this.parts.invalid && this.parts.dirty;\n  }\n\n  constructor(\n    formBuilder: FormBuilder,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\n    @Optional() @Self() public ngControl: NgControl) {\n\n    this.parts = formBuilder.group({\n      area: [\n        null,\n        [Validators.required, Validators.minLength(3), Validators.maxLength(3)]\n      ],\n      exchange: [\n        null,\n        [Validators.required, Validators.minLength(3), Validators.maxLength(3)]\n      ],\n      subscriber: [\n        null,\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)]\n      ]\n    });\n\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    if (!control.errors && nextElement) {\n      this._focusMonitor.focusVia(nextElement, 'program');\n    }\n  }\n\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\n    if (control.value.length < 1) {\n      this._focusMonitor.focusVia(prevElement, 'program');\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    const controlElement = this._elementRef.nativeElement\n      .querySelector('.example-tel-input-container')!;\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\n  }\n\n  onContainerClick() {\n    if (this.parts.controls.subscriber.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\n    } else if (this.parts.controls.exchange.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\n    } else if (this.parts.controls.area.valid) {\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\n    } else {\n      this._focusMonitor.focusVia(this.areaInput, 'program');\n    }\n  }\n\n  writeValue(tel: MyTel | null): void {\n    this.value = tel;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    this.autoFocusNext(control, nextElement);\n    this.onChange(this.value);\n  }\n\n  static ngAcceptInputType_disabled: boolean | string | null | undefined;\n  static ngAcceptInputType_required: boolean | string | null | undefined;\n}\n","<div [formGroup]=\"form\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Phone number</mat-label>\n    <example-tel-input formControlName=\"tel\" required></example-tel-input>\n    <mat-icon matSuffix>phone</mat-icon>\n    <mat-hint>Include area code</mat-hint>\n  </mat-form-field>\n</div>\n","<div role=\"group\" class=\"example-tel-input-container\"\n     [formGroup]=\"parts\"\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\n  <input class=\"example-tel-input-element\"\n         formControlName=\"area\" size=\"3\"\n         maxLength=\"3\"\n         aria-label=\"Area code\"\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\n         #area>\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input class=\"example-tel-input-element\"\n         formControlName=\"exchange\"\n         maxLength=\"3\"\n         size=\"3\"\n         aria-label=\"Exchange code\"\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\n         #exchange>\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input class=\"example-tel-input-element\"\n         formControlName=\"subscriber\"\n         maxLength=\"4\"\n         size=\"4\"\n         aria-label=\"Subscriber number\"\n         (input)=\"_handleInput(parts.controls.subscriber)\"\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\n         #subscriber>\n</div>\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your email</mat-label>\n    <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\n    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Form field with error messages */\n@Component({\n  selector: 'form-field-error-example',\n  templateUrl: 'form-field-error-example.html',\n  styleUrls: ['form-field-error-example.css'],\n})\nexport class FormFieldErrorExample {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Form field with hints */\n@Component({\n  selector: 'form-field-hint-example',\n  templateUrl: 'form-field-hint-example.html',\n  styleUrls: ['form-field-hint-example.css'],\n})\nexport class FormFieldHintExample {}\n","<div class=\"example-container\">\n  <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\n    <mat-label>Enter some input</mat-label>\n    <input matInput #input maxlength=\"10\" placeholder=\"Ex. Nougat\">\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Select me</mat-label>\n    <mat-select>\n      <mat-option value=\"option\">Option</mat-option>\n    </mat-select>\n    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n/** @title Form field with label */\n@Component({\n  selector: 'form-field-label-example',\n  templateUrl: 'form-field-label-example.html',\n  styleUrls: ['form-field-label-example.css'],\n})\nexport class FormFieldLabelExample {\n  options: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl,\n    });\n  }\n}\n","<div class=\"example-container\">\n  <form [formGroup]=\"options\">\n    <mat-checkbox [formControl]=\"hideRequiredControl\">Hide required marker</mat-checkbox>\n    <div>\n      <label>Float label: </label>\n      <mat-radio-group [formControl]=\"floatLabelControl\">\n        <mat-radio-button value=\"auto\">Auto</mat-radio-button>\n        <mat-radio-button value=\"always\">Always</mat-radio-button>\n      </mat-radio-group>\n    </div>\n\n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n        [floatLabel]=\"floatLabelControl.value\">\n      <input matInput placeholder=\"Simple placeholder\" required>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n      <mat-label>Both a label and a placeholder</mat-label>\n      <input matInput placeholder=\"Simple placeholder\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n        [floatLabel]=\"floatLabelControl.value\">\n      <mat-select required>\n        <mat-option>-- None --</mat-option>\n        <mat-option value=\"option\">Option</mat-option>\n      </mat-select>\n      <mat-label><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i></mat-label>\n    </mat-form-field>\n  </form>\n</div>\n","import {Component} from '@angular/core';\n\n/** @title Simple form field */\n@Component({\n  selector: 'form-field-overview-example',\n  templateUrl: 'form-field-overview-example.html',\n})\nexport class FormFieldOverviewExample {}\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Input</mat-label>\n    <input matInput>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Select</mat-label>\n    <mat-select>\n      <mat-option value=\"option\">Option</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Textarea</mat-label>\n    <textarea matInput></textarea>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\n\n/** @title Form field with prefix & suffix */\n@Component({\n  selector: 'form-field-prefix-suffix-example',\n  templateUrl: 'form-field-prefix-suffix-example.html',\n  styleUrls: ['form-field-prefix-suffix-example.css'],\n})\nexport class FormFieldPrefixSuffixExample {\n  hide = true;\n}\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your password</mat-label>\n    <input matInput [type]=\"hide ? 'password' : 'text'\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Amount</mat-label>\n    <input matInput type=\"number\" class=\"example-right-align\">\n    <span matPrefix>$&nbsp;</span>\n    <span matSuffix>.00</span>\n  </mat-form-field>\n</div>\n","<form class=\"example-container\" [formGroup]=\"options\" [style.fontSize.px]=\"getFontSize()\">\n  <mat-form-field appearance=\"fill\" [color]=\"colorControl.value\">\n    <mat-label>Color</mat-label>\n    <mat-select [formControl]=\"colorControl\">\n      <mat-option value=\"primary\">Primary</mat-option>\n      <mat-option value=\"accent\">Accent</mat-option>\n      <mat-option value=\"warn\">Warn</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" [color]=\"colorControl.value\">\n    <mat-label>Font size</mat-label>\n    <input matInput type=\"number\" placeholder=\"Ex. 12\" [formControl]=\"fontSizeControl\" min=\"10\">\n    <span matSuffix>px</span>\n    <mat-error *ngIf=\"fontSizeControl.invalid\">Min size: 10px</mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n/** @title Form field theming */\n@Component({\n  selector: 'form-field-theming-example',\n  templateUrl: 'form-field-theming-example.html',\n  styleUrls: ['form-field-theming-example.css'],\n})\nexport class FormFieldThemingExample {\n  options: FormGroup;\n  colorControl = new FormControl('primary');\n  fontSizeControl = new FormControl(16, Validators.min(10));\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      color: this.colorControl,\n      fontSize: this.fontSizeControl,\n    });\n  }\n\n  getFontSize() {\n    return Math.max(10, this.fontSizeControl.value);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormFieldAppearanceExample} from './form-field-appearance/form-field-appearance-example';\nimport {\n  FormFieldCustomControlExample,\n  MyTelInput\n} from './form-field-custom-control/form-field-custom-control-example';\nimport {FormFieldErrorExample} from './form-field-error/form-field-error-example';\nimport {FormFieldHintExample} from './form-field-hint/form-field-hint-example';\nimport {FormFieldLabelExample} from './form-field-label/form-field-label-example';\nimport {FormFieldOverviewExample} from './form-field-overview/form-field-overview-example';\nimport {\n  FormFieldPrefixSuffixExample\n} from './form-field-prefix-suffix/form-field-prefix-suffix-example';\nimport {FormFieldThemingExample} from './form-field-theming/form-field-theming-example';\n\nexport {\n  FormFieldAppearanceExample,\n  FormFieldCustomControlExample,\n  FormFieldErrorExample,\n  FormFieldHintExample,\n  FormFieldLabelExample,\n  FormFieldOverviewExample,\n  FormFieldPrefixSuffixExample,\n  FormFieldThemingExample,\n  MyTelInput,\n};\n\nconst EXAMPLES = [\n  FormFieldAppearanceExample,\n  FormFieldCustomControlExample,\n  FormFieldErrorExample,\n  FormFieldHintExample,\n  FormFieldLabelExample,\n  FormFieldOverviewExample,\n  FormFieldPrefixSuffixExample,\n  FormFieldThemingExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [...EXAMPLES, MyTelInput],\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class FormFieldExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","i0.ɵɵstyleProp"],"mappings":"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"}